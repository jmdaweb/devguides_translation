# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-15 20:26+0200\n"
"PO-Revision-Date: 2020-08-15 20:28+0200\n"
"Last-Translator: José Manuel Delicado <jmdaweb@hotmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.4.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ..\python_docs\w10addoninternals.py:3
msgid "# NVDA Add-on internals: Windows 10 App Essentials"
msgstr "# Complementos de NVDA vistos por dentro: Windows 10 App Essentials"

#: ..\python_docs\w10addoninternals.py:4
msgid "Author: Joseph Lee"
msgstr "Autor: Joseph Lee"

#: ..\python_docs\w10addoninternals.py:5
#, fuzzy
#| msgid "Revision: October 2019"
msgid "Revision: July 2020"
msgstr "Revisión: octubre de 2019"

#: ..\python_docs\w10addoninternals.py:6
msgid "## Introduction"
msgstr "## Introducción"

#: ..\python_docs\w10addoninternals.py:7
msgid ""
"Supporting new technologies can be fun and challenging, especially a new "
"operating system version that changes how people perform certain tasks and "
"introduces new ways of keeping up with changes. This is more so when it "
"comes to letting screen readers support new operating systems such as "
"Windows 10, which brings new ways of interacting with a computer, new set of "
"apps and technologies, and accessibility improvements and challenges. NVDA "
"includes solid support for Windows 10, including Microsoft Edge, the new "
"Start menu, navigation in universal apps and so on, all made possible thanks "
"to collaboration between users, Microsoft, NV Access and others, part of "
"which involves the add-on we will meet in this article."
msgstr ""
"Dar soporte a nuevas tecnologías puede ser un reto divertido, especialmente "
"si hablamos de la nueva versión de un sistema operativo que cambia el modo "
"que tiene la gente de realizar ciertas tareas y presenta nuevas formas de "
"mantenerse al día. Este reto es aún mayor cuando se centra en dar soporte a "
"los lectores de pantalla para que funcionen en nuevos sistemas operativos "
"tales como Windows 10, que trae nuevas formas de interactuar con el "
"ordenador, un nuevo conjunto de aplicaciones y tecnologías, y mejoras y "
"retos de accesibilidad. NVDA viene con un soporte sólido para Windows 10, "
"incluyendo Microsoft Edge, el nuevo menú de inicio, navegación en "
"aplicaciones universales y mucho más, todo hecho posible gracias a la "
"colaboración entre los usuarios, Microsoft, NV Access y otros. Parte de este "
"soporte se da gracias al complemento que encontraremos en este artículo."

#: ..\python_docs\w10addoninternals.py:8
msgid ""
"In NVDA Add-on Internals: Windows 10 App Essentials, we'll look at how this "
"add-on came about, how it works, and go over recommendations from the add-on "
"author (me) regarding accessibility practices. You'll also glimpse how UI "
"Automation works at a high level, how features start out as an add-on "
"component and end up as an NVDA feature and so on."
msgstr ""
"En Complementos de NVDA vistos por dentro: Windows 10 App Essentials, "
"veremos cómo se creó este complemento, cómo funciona, y algunas "
"recomendaciones de su autor (yo) relacionadas con prácticas de "
"accesibilidad. También estudiaremos cómo funciona UI Automation a alto "
"nivel, cómo algunas funciones empiezan en forma de complemento y acaban "
"integradas en NVDA, y mucho más."

#: ..\python_docs\w10addoninternals.py:9
msgid ""
"To download the add-on, visit https://addons.nvda-project.org/addons/"
"wintenApps.en.html. The source code for this add-on can be found at https://"
"github.com/josephsl/wintenApps. As Windows 10 and universal apps are UI "
"Automation universes, it is essential that you know some things about UIA, "
"which are covered later."
msgstr ""
"Para descargar este complemento, visita la sección correspondiente, que "
"encontrarás en el menú superior de nuestra web. El código fuente puede "
"encontrarse en https://github.com/josephsl/wintenApps. Ya que Windows 10 y "
"las aplicaciones universales pertenecen al mundo de UI Automation, es "
"esencial que sepas algunas cosas sobre UIA, que se cubren más adelante."

#: ..\python_docs\w10addoninternals.py:10
msgid ""
"Disclaimer: Despite the article text and knowledge that's contained within, "
"I (Joseph Lee, the add-on author) do not work for NV Access nor Microsoft."
msgstr ""
"Descargo de responsabilidad: a pesar del texto del artículo y los "
"conocimientos que contiene, yo (Joseph Lee, el creador del complemento) no "
"trabajo para NV Access ni Microsoft."

#: ..\python_docs\w10addoninternals.py:11
#, fuzzy
#| msgid ""
#| "Note: some of the features described may change as Windows 10 and NvDA "
#| "development progresses. As of October 2019 revision, one or two features "
#| "from upcoming NVDA 2019.3 release and recent Windows Insider Preview "
#| "builds are documented for reference purposes. Also, when refering to "
#| "Windows 10 updates, release ID (YYMM) is used instead of using marketing "
#| "label unless specified (for example, Version 1709 instead of Fall "
#| "Creators Update)."
msgid ""
"Note: some of the features described may change as Windows 10 and NvDA "
"development progresses. As of August 2020 revision, features from upcoming "
"NVDA 2020.3 release and recent Windows Insider Preview builds are documented "
"for reference purposes. Also, when refering to Windows 10 updates, release "
"ID (YYMM) is used instead of using marketing label unless specified (for "
"example, Version 1709 instead of Fall Creators Update, or 20H2 instead of "
"2009)."
msgstr ""
"Nota: algunas de las funciones descritas pueden cambiar según progresen el "
"desarrollo de NVDA y Windows 10. En la revisión de octubre de 2019, se han "
"documentado una o dos características del futuro NVDA 2019.3 y las "
"compilaciones de Windows Insider Preview más recientes con propósitos de "
"referencia. Además, al referirse a las actualizaciones de Windows 10, se usa "
"el identificador de la versión (aamm) en lugar de la etiqueta de mercado a "
"menos que se especifique (por ejemplo, versión 1709 en vez de actualización "
"Fall Creators)."

#: ..\python_docs\w10addoninternals.py:12
#, fuzzy
#| msgid ""
#| "Copyright: Microsoft Windows, Windows 10, Windows API, UI Automation, "
#| "Microsoft Edge, Universal Windows Platform (UWP) and related technologies "
#| "are copyright Microsoft Corporation. NVDA is copyright NV Access. Windows "
#| "10 App Essentials add-on is copyright 2015-2019 Joseph Lee and others, "
#| "released under GPL 2."
msgid ""
"Copyright: Microsoft Windows, Windows 10, Windows API, UI Automation, "
"Microsoft Edge, Universal Windows Platform (UWP) and related technologies "
"are copyright Microsoft Corporation. NVDA is copyright NV Access. Windows 10 "
"App Essentials add-on is copyright 2015-2020 Joseph Lee and contributors, "
"released under GPL 2."
msgstr ""
"Derechos de copia: Microsoft Windows, Windows 10, Windows API, UI "
"Automation, Microsoft Edge, Universal Windows Platform (UWP) y otras "
"tecnologías relacionadas tienen copyright de Microsoft Corporation. NVDA "
"tiene copyright de NV Access. El complemento Windows 10 App Essentials tiene "
"copyright 2015-2019 de Joseph Lee y otros, y está liberado bajo la GPL "
"versión 2."

#: ..\python_docs\w10addoninternals.py:13
msgid "## Introducing Windows 10"
msgstr "## Presentación de Windows 10"

#: ..\python_docs\w10addoninternals.py:14
msgid ""
"Windows 10 is the \"last major\" version of Windows for the foreseeable "
"future. It introduces a completely new way of keeping track of changes "
"through Windows Insider Program and Windows as a Service (WaaS, a fancy term "
"for continuous delivery), new application development framework, unification "
"strategy in terms of user experience across devices and a new web browser. "
"In addition, it features the return of an older style of Start menu, virtual "
"desktops, Action Center to centralize notifications, a way to run command-"
"line Linux utilities, and revamped Narrator that continues to receive "
"refinements."
msgstr ""
"Windows 10 es la \"última\" gran versión de Windows previsiblemente para el "
"futuro. Nos presenta una forma completamente nueva de mantener un "
"seguimiento de los cambios a través del Windows Insider Program y Windows "
"como servicio (WAAS, un término fantástico para hablar de entrega continua), "
"un nuevo marco de trabajo de desarrollo de aplicaciones, estrategias de "
"unificación en términos de experiencia de usuario a través de dispositivos y "
"un nuevo explorador web. Además, destacan el regreso del viejo estilo del "
"menú inicio, los escritorios virtuales, el centro de actividades para "
"centralizar las notificaciones, una nueva forma de ejecutar utilidades de "
"consola de Linux, y un renovado narrador que sigue introduciendo mejoras."

#: ..\python_docs\w10addoninternals.py:15
msgid ""
"Windows 10 made its maiden flight in October 2014. Back then, it was called "
"Windows Technical Preview, and after several weeks, it was renamed to "
"Windows Insider Preview. Between October 2014 and July 2015 when Windows 10 "
"Version 1507 (build 10240) shipped, more than five million users became "
"Insiders, testing new builds and apps, submitting feedback and so on."
msgstr ""
"Windows 10 hizo su vuelo inaugural en octubre de 2014. Antes de eso, era "
"conocido como Windows Technical Preview, y tras varias semanas, su nombre "
"cambió al de programa Windows Insider. Entre octubre de 2014 y julio de "
"2015, cuando se liberó la versión 1507 (compilación 10240), más de cinco "
"millones de usuarios se convirtieron en insiders, probando nuevas "
"compilaciones y aplicaciones, enviando retroalimentación, etc."

#: ..\python_docs\w10addoninternals.py:16
msgid ""
"I call the October 2014 preview (build 9841) a maiden flight for several "
"reasons. First, this is the first time where Microsoft did show interest in "
"user-level feedback. Although betas existed for earlier versions such as "
"Windows 7 and 8.1, Windows 10 is the first attempt from Microsoft at "
"connecting with users and taking comments seriously. Second, build 9841 (the "
"first Insider Preview build) hailed the start of Windows as a Service, a "
"completely different approach to upgrading Windows where Microsoft wanted to "
"provide two things: continuous delivery and feedback loop, and a unified "
"configuration that works well with most devices. There were setbacks, such "
"as privacy concerns due to telemetry, but for the most part, Windows 10 was "
"received positively."
msgstr ""
"Llamo a la beta de octubre de 2014 (compilación 9841) vuelo inaugural por "
"varias razones. En primer lugar, es la primera vez donde Microsoft mostró "
"interés en las opiniones de los usuarios. Aunque existieron betas para "
"versiones anteriores de Windows, como Windows 7 y 8.1, Windows 10 es el "
"primer intento de Microsoft de conectar con los usuarios y tomar los "
"comentarios en serio. En segundo lugar, la compilación 9841 (la primera "
"compilación para insiders) marcó el comienzo de Windows como un servicio, un "
"enfoque completamente diferente para mejorar Windows en el que Microsoft "
"quería ofrecer dos cosas: entrega continua y bucle de realimentación, y una "
"configuración unificada que funcione bien con la mayoría de dispositivos. "
"Hubo contratiempos, como las preocupaciones que se generaron en privacidad "
"debido a la telemetría, pero en la mayoría de los casos Windows 10 fue "
"recibido positivamente."

#: ..\python_docs\w10addoninternals.py:17
msgid ""
"There is another, more personal reason for calling October 2014 release a "
"maiden flight: I became one of the first Windows Insiders, and due to my "
"work on NVDA, I have decided to make sure screen reader users were treated "
"with respect. This included sending accessibility-related feedback, getting "
"other screen reader users onboard as Insiders, and releasing NVDA try builds "
"that resolved important issues for Windows Insiders. This culminated in the "
"release of Windows 10 App Essentials add-on in November 2015 (in time for "
"Windows 10 Version 1511/build 10586 release) that provided basic support for "
"Insider Hub (now Feedback Hub) and other workarounds, which translated to "
"superb user experience for NVDA users when it comes to using Windows 10 and "
"various universal apps. My work on championing accessibility continues "
"today, especially when it comes to making sure third-party universal apps "
"are usable by many, supporting features such as Sets and so on."
msgstr ""
"Hay otra razón más personal para llamar a la compilación de octubre de 2014 "
"el vuelo inaugural: yo fui uno de los primeros insiders, y debido a mis "
"trabajos con NVDA, decidí que los usuarios de lectores de pantalla debíamos "
"ser tratados con respeto. Esto incluía enviar retroalimentación relacionada "
"con la accesibilidad, conseguir que otros usuarios de lectores de pantalla "
"subieran a bordo del programa Windows Insider, y liberar versiones de "
"desarrollo de NVDA que resolvieran problemas importantes para los Windows "
"insiders. Esto culminó con la publicación del complemento Windows 10 App "
"Essentials en noviembre de 2015 (justo a tiempo de que se liberara la "
"versión 1511 / compilación 10586) que traía soporte para el centro de "
"Windows Insider (actualmente centro de comentarios) y otras soluciones, que "
"se tradujeron en una experiencia magnífica para los usuarios de NVDA al usar "
"Windows 10 y diversas aplicaciones universales. Mi trabajo de la defensa de "
"la accesibilidad continúa hoy en día, especialmente cuando toca asegurarse "
"de que las aplicaciones de terceros son usables para muchos, dando soporte a "
"características como los conjuntos y demás."

#: ..\python_docs\w10addoninternals.py:18
msgid "## Purposes of Windows 10 App Essentials"
msgstr "## Propósitos de Windows 10 App Essentials"

#: ..\python_docs\w10addoninternals.py:19
msgid "Windows 10 App Essentials add-on is built on top of four pillars:"
msgstr ""
"El complemento Windows 10 App Essentials se ha construido sobre cuatro "
"pilares:"

#: ..\python_docs\w10addoninternals.py:20
msgid ""
"* New features support: part of making sure screen reader users were treated "
"with respect was showcasing new Windows 10 features early through this NVDA "
"add-on. These include support for really old versions of Feedback Hub app, "
"emoji panel in Fall Creators Update and so on."
msgstr ""
"* Soporte de nuevas características: una forma de asegurarse de que los "
"usuarios de lectores de pantalla eran tratados con respeto era adaptando "
"características de Windows 10 según aparecían a través de este complemento. "
"Entre ellas se incluyen un soporte para la antigua aplicación del centro de "
"comentarios, y el panel de emojis en Windows 10 creators update."

#: ..\python_docs\w10addoninternals.py:21
msgid ""
"* Essential features and announcements: Until early 2017, NVDA did not "
"announce important information such as status of Windows Update "
"installations in Settings app. This has changed significantly in 2017 (see "
"notes on live region change event for details)."
msgstr ""
"* Características esenciales y verbalización: hasta principios del 2017, "
"NVDA no verbalizaba información importante, como el estado de la instalación "
"de actualizaciones en Windows Update en la aplicación de configuración. Esto "
"está a punto de cambiar (mira las notas del evento de cambio en región "
"activa para más detalles)."

#: ..\python_docs\w10addoninternals.py:22
msgid ""
"* UI Automation and accessibility workarounds: every day, new features and "
"bug fixes are added to various universal apps or Windows 10 itself. At the "
"same time, there is at least one app where accessibility, particularly UI "
"Automation, gets broken. Some of the add-on code is devoted to providing "
"workarounds for odd UIA implementations."
msgstr ""
"* Solución de problemas de accesibilidad y UI Automation: cada día se añaden "
"nuevas funciones y se solucionan fallos en diversas aplicaciones universales "
"y en el propio Windows 10. Al mismo tiempo, hay al menos una aplicación "
"donde la accesibilidad, particularmente la de UI Automation, se rompe. Parte "
"del código del complemento se destina a solucionar implementaciones "
"defectuosas de UIA."

#: ..\python_docs\w10addoninternals.py:23
msgid ""
"* Demonstrating commitment to accessibility advocacy: some accessibility "
"champions, including I, have recently stressed that accessibility is "
"important in app designs, and that developers should take accessibility "
"feedback seriously. Through workarounds and features, the add-on provides a "
"way to demonstrate this commitment and advocacy."
msgstr ""
"* Demostración de compromiso y promoción de la accesibilidad: algunos "
"defensores de la accesibilidad, incluyéndome a mí, hemos subrayado "
"recientemente que la accesibilidad es importante en los diseños de "
"aplicaciones, y que los desarrolladores deberían tomarse los comentarios de "
"accesibilidad en serio. A través de características y solución de errores, "
"el complemento ofrece una forma de demostrar este compromiso y promoción."

#: ..\python_docs\w10addoninternals.py:24
msgid ""
"There is a fifth pillar that has emerged in recent years: providing a "
"testing ground for potential NVDA features dealing with Windows 10 and apps. "
"Recently, parts of this add-on have made their way to NVDA screen reader, "
"including emoji panel support, suggestion sounds, dialog detection and "
"others."
msgstr ""
"Existe un quinto pilar que ha emergido en los últimos años: proporcionar una "
"base de pruebas para potenciales características de NVDA que traten con "
"Windows 10 y las aplicaciones. Recientemente, algunas partes de este "
"complemento se han transferido al lector de pantalla NVDA, incluyendo el "
"soporte para el panel de emojis, sonidos de sugerencias, detección de "
"diálogo y otras."

#: ..\python_docs\w10addoninternals.py:25
msgid "## Add-on contents"
msgstr "## Contenidos del complemento"

#: ..\python_docs\w10addoninternals.py:26
#, fuzzy
#| msgid ""
#| "The Windows 10 App Essentials add-on consists of a global plugin and app "
#| "modules for various universal apps that comes with Windows 10. The "
#| "Windows 10 Objects (shortened to WinTenObjs), the global plugin portion "
#| "of this add-on, provides foundations such as overlay classes for "
#| "frequently encountered controls in Windows 10 an universal apps, along "
#| "with UIA event tracking and logger facility. Until 2018, the global "
#| "plugin was also responsible for add-on update feature, documented here "
#| "for sake of completeness."
msgid ""
"The Windows 10 App Essentials add-on consists of a global plugin and app "
"modules for various universal apps included with Windows 10. The Windows 10 "
"Objects (shortened to WinTenObjs), the global plugin portion of this add-on, "
"provides foundations such as overlay classes for frequently encountered "
"controls in Windows 10 an universal apps, along with UIA event tracking and "
"logger facility. Until 2018, the global plugin was also responsible for add-"
"on update feature, documented here for sake of completeness."
msgstr ""
"El complemento Windows 10 App Essentials está formado por una extensión "
"global y módulos de aplicación para diversas aplicaciones universales que "
"vienen con Windows 10. Los objetos de Windows 10 (abreviados como "
"WinTenObjs), la porción de extensión global de este complemento, ofrecen "
"soluciones como clases de superposición para controles que se encuentran "
"frecuentemente en Windows 10 y las aplicaciones universales, rastreo de "
"eventos UIA y registro. Hasta 2018, la extensión global también era "
"responsable de la función de actualización del complemento, y se documenta "
"aquí con motivos de completitud."

#: ..\python_docs\w10addoninternals.py:27
msgid ""
"In regards to app modules, these were included to either provide workarounds "
"or enhance the user experience. For example, the app module for Settings app "
"(systemsettings) allows NVDA to announce Windows Update download and "
"installation progress, and app module for UWP frame host "
"(shellexperiencehost) includes a workaround for menu expanded status problem "
"in Start menu. We'll meet some of these app modules in subsequent sections."
msgstr ""
"En cuanto a los módulos de aplicación, se han incluido para ofrecer solución "
"de errores o mejorar la experiencia de usuario. Por ejemplo, el módulo de "
"aplicación para la aplicación de configuración (systemsettings) permite a "
"NVDA anunciar el progreso de descarga e instalación en Windows Update, y el "
"módulo de aplicación para UWP Frame Host (shellexperiencehost) incluye una "
"solución a un problema de estado de menú expandido en el menú de inicio. "
"Conoceremos estos módulos de aplicación con detalle en las siguientes "
"secciones."

#: ..\python_docs\w10addoninternals.py:28
msgid "### A note on feature parity with NVDA screen reader"
msgstr ""
"### Nota relacionada con la paridad de características en el lector de "
"pantalla NVDA"

#: ..\python_docs\w10addoninternals.py:29
msgid ""
"As noted above, some features discussed in this article (such as suggestion "
"sound playback and UIA notification event handler) were integrated into "
"recent NVDA releases. I will point out some of these, as well as provide how "
"these were integrated, including planning involved and some tips on "
"modifying add-on features to fit into NVDA's code base."
msgstr ""
"Como se ha dicho antes, algunas características discutidas en este artículo "
"(tales como la reproducción de un sonido de sugerencias y el manejador de "
"evento de notificación de UIA) se han integrado en las últimas versiones de "
"NVDA. Voy a señalar algunas de ellas y explicar cómo se han integrado, "
"incluyendo la planificación involucrada y algunos consejos para modificar "
"las características del complemento para que encajen bien en el código base "
"de NVDA."

#: ..\python_docs\w10addoninternals.py:30
msgid "### Information on add-on update feature"
msgstr "### Información sobre la función de actualización del complemento"

#: ..\python_docs\w10addoninternals.py:31
msgid ""
"This article will sometimes reference add-on update feature, which is gone "
"in 2019. Information about it is kept here for reference purposes. An add-on "
"appropriately named \"Add-on Updater\" is used to update windows 10 App "
"Essentials and other add-ons."
msgstr ""
"Este artículo hará referencia en ocasiones a una función de actualización "
"del complemento, que se ha ido en 2019. La información relacionada con esta "
"característica se mantiene con propósitos de referencia. Ahora se usa un "
"complemento llamado \"Add-on Updater\" para actualizar Windows 10 App "
"Essentials y otros complementos."

#: ..\python_docs\w10addoninternals.py:32
msgid "## Fun with UI Automation"
msgstr "## Introducción a UI Automation"

#: ..\python_docs\w10addoninternals.py:33
msgid ""
"Before we dive into how the add-on works, it is helpful to understand what "
"UIA is and wy it is important. Only then the rest of the article makes "
"sense, as Windows 10 and universal apps are UIA universes (exceptions exist, "
"including desktop apps converted for distribution in Microsoft Store)."
msgstr ""
"Antes de pasar a explicar cómo funciona el complemento, es útil entender "
"cómo es UIA y por qué es importante. Sólo entonces el resto del artículo "
"tiene sentido, ya que Windows 10 y las aplicaciones universales se apoyan en "
"UIA (existen excepciones, como aplicaciones de escritorio empaquetadas para "
"su distribución en la tienda Microsoft)."

#: ..\python_docs\w10addoninternals.py:34
msgid ""
"UI Automation (UIA), released in 2007, is an accessibility API based on "
"Component Object Model (COM) that allows assistive technologies and other "
"programs to communicate with each other regarding accessibility information "
"about a control. In some respects, this API is a replacement for Microsoft "
"Active Accessibility (MSAA), sometimes called IAccessible that was released "
"in the 1990's. Being a COM-based API set, it allows programs and objects to "
"expose essential information regardless of programming language in use as "
"long as an object exposes documented routines that other programs can use."
msgstr ""
"UI Automation (UIA), publicada en 2007, es una api de accesibilidad basada "
"en el modelo de componentes y objetos (COM) que permite a las ayudas "
"técnicas y otros programas comunicarse con los demás transmitiendo "
"información de accesibilidad sobre un control. En algunos ámbitos, esta api "
"reemplaza a Microsoft Active Accessibility (MSAA), a veces llamada "
"IAccessible, y que se publicó en los años 90. Siendo una api basada en COM, "
"permite a los programas y objetos exponer información esencial sin importar "
"el lenguaje de programación que se use, ya que cada objeto expone rutinas "
"documentadas que cualquier otro programa puede usar."

#: ..\python_docs\w10addoninternals.py:35
msgid ""
"In UIA world, an object on screen is termed an \"element\". Just like any "
"accessibility API's, UIA exposes various elements to assistive technologies, "
"which are termed \"clients\", with programs with the set elements termed "
"\"servers\". These elements are organized into a UI tree, with the Windows "
"Shell (desktop) object being the root, with tree being pruned and new leafs "
"springing constantly whenever apps are started and closed, elements are "
"created and destroyed, controls are shown and hidden on screen and so on."
msgstr ""
"En el mundo UIA, un objeto en pantalla se denomina \"elemento\". Como en "
"cualquier api de accesibilidad, UIA expone varios elementos a las ayudas "
"técnicas, llamadas \"clientes\", siendo el programa que ofrece estos "
"elementos un \"servidor\". Estos elementos se organizan en un árbol de "
"interfaz, con la Shell de Windows (Escritorio) como raíz, y con el árbol "
"podado y nuevas hojas brotando constantemente cada vez que las aplicaciones "
"se inician y se cierran, los elementos son creados y destruidos, los "
"controles se muestran y se ocultan en la pantalla y así sucesivamente."

#: ..\python_docs\w10addoninternals.py:36
msgid ""
"Although UIA is meant to replace MSAA due to modernized accessibility "
"information that can be gathered, screen reader vendors such as NV Access "
"publishes workarounds for poor or odd UIA implementations. One such case is "
"UIA issues in older versions of Microsoft Office, such as label problem in "
"various combo boxes. Certain areas in Windows 10 and universal apps still "
"have UIA issues, such as odd or badly applied control labels, generic XAML "
"(eXtensible Application Markup Language)/UI labels, expected events not "
"being fired and so on. This is one of the reasons for creating Windows 10 "
"App Essentials add-on: to provide workarounds for issues like these."
msgstr ""
"Aunque UIA se ha diseñado para reemplazar a MSAA debido a la información de "
"accesibilidad modernizada que puede recuperarse, los fabricantes de lectores "
"de pantalla como NV Access publican solución de errores para "
"implementaciones UIA pobres o defectuosas. Un caso conocido se encuentra en "
"los problemas de UIA en versiones antiguas de Microsoft Office, tales como "
"problemas de etiquetado en algunos cuadros combinados. Ciertas áreas en "
"Windows 10 y las aplicaciones universales todavía tienen problemas con UIA, "
"tales como etiquetas de controles defectuosas o mal aplicadas, etiquetas "
"genéricas de interfaz o de XAML (lenguaje de marcas extensible para "
"aplicaciones), eventos que se esperan y que nunca llegan a dispararse, y así "
"sucesivamente. Esta es una de las razones para crear el complemento Windows "
"10 App Essentials: ofrecer soluciones para problemas como estos."

#: ..\python_docs\w10addoninternals.py:37
msgid "### Automation ID and other interfaces and properties"
msgstr "### ID de automatización y otras interfaces y propiedades"

#: ..\python_docs\w10addoninternals.py:38
msgid ""
"A key piece of information UIA exposes (or attempts to gather) is automation "
"ID, a string that uniquely identifies an element. For example, some search "
"fields expose \"SearchEditBox\" as automation ID, which allows screen "
"readers such as NVDA to detect these controls. Although most controls do "
"expose unique automation ID's, some uses generic or auto-generated "
"automation ID's (such as update history in Settings app)."
msgstr ""
"Una pieza clave de información que UIA expone (o intenta exponer) es el ID "
"de automatización, una cadena que identifica unívocamente un elemento. Por "
"ejemplo, algunos campos de búsqueda exponen \"SearchEditBox\" como ID de "
"automatización, que permite a lectores de pantalla como NVDA detectar estos "
"controles. Aunque la mayoría de los controles exponen identificadores de "
"automatización únicos, algunos utilizan identificadores genéricos o "
"generados automáticamente (como por ejemplo el historial de actualizaciones "
"en la aplicación de configuración)."

#: ..\python_docs\w10addoninternals.py:39
msgid "Other useful information exposed by UIA elements are:"
msgstr "Otra información útil expuesta por los elementos UIA es la siguiente:"

#: ..\python_docs\w10addoninternals.py:40
msgid ""
"* Class name: the class name for this control, a string that denotes the "
"class of this element (not to be confused with automation ID that uniquely "
"identifies an element)."
msgstr ""
"* Nombre de clase: el nombre de la clase para este control, una cadena que "
"identifica la clase de este elemento (no debe confundirse con el ID de "
"automatización, que identifica unívocamente un elemento)."

#: ..\python_docs\w10addoninternals.py:41
msgid ""
"* Framework: the underlying framework used to create a given control such as "
"XAML, Direct UI and others."
msgstr ""
"* Marco de trabajo: el marco de trabajo subyacente usado para crear un "
"control dado, por ejemplo XAML, Direct UI y otros."

#: ..\python_docs\w10addoninternals.py:42
msgid ""
"* Localized control type: a role type text that should be spoken by screen "
"readers in different languages."
msgstr ""
"* Tipo de control localizado: un texto con el tipo de rol que debería ser "
"verbalizado por los lectores de pantalla en diferentes idiomas."

#: ..\python_docs\w10addoninternals.py:43
msgid ""
"* Controller for: a list (array) of controls that this element manipulates "
"when performing actions such as search suggestions (explained below)."
msgstr ""
"* Controlador para: una lista (array) de controles que este elemento "
"manipula cuando realiza acciones tales como sugerencias de búsqueda (se "
"explica más abajo)."

#: ..\python_docs\w10addoninternals.py:44
msgid ""
"* ARIA properties: a map of ARIA properties such as role description, mostly "
"encountered in Microsoft Edge elements."
msgstr ""
"* Propiedades ARIA: un mapa de propiedades ARIA tales como descripción del "
"rol, situadas mayoritariamente en elementos de Microsoft Edge."

#: ..\python_docs\w10addoninternals.py:45
msgid "### UIA events"
msgstr "### Eventos UIA"

#: ..\python_docs\w10addoninternals.py:46
msgid ""
"In addition to standard events expected from accessibility API's such as "
"focus manipulation and object property (such as name and state) changes, UIA "
"comes with some interesting events, including controller for, live region "
"changed, notification and many others. Due to performance reasons, NVDA "
"ignores certain events such as structure change and others. How NVDA and "
"Windows 10 App Essentials deals with certain UIA events is covered later in "
"this article."
msgstr ""
"Además de los eventos estándar esperados de las apis de accesibilidad, tales "
"como manipulación de foco y cambios en las propiedades de un objeto (como "
"nombre y estado), UIA viene con algunos eventos interesantes, incluyendo "
"controlador para (Controller for), cambios en región viva (live región "
"changed), notificación y muchos otros. Por razones de rendimiento, NVDA "
"ignora ciertos eventos como cambio de estructura y algunos más. Más adelante "
"en este artículo se explica cómo trabajan NVDA y Windows 10 App Essentials "
"con ciertos eventos UIA."

#: ..\python_docs\w10addoninternals.py:47
msgid "### UIA-related additions, fixes and workarounds"
msgstr "### Solución de fallos y características añadidas relacionadas con UIA"

#: ..\python_docs\w10addoninternals.py:48
msgid ""
"The Windows 10 App Essentials add-on includes the following additions, fixes "
"and workarounds for UIA issues and control problems:"
msgstr ""
"El complemento Windows 10 App Essentials incluye los siguientes extras, "
"parches y soluciones para problemas de UIA y controles:"

#: ..\python_docs\w10addoninternals.py:49
msgid ""
"* Search suggestions: NVDA now plays a sound to indicate appearance of "
"search suggestions. More on this below."
msgstr ""
"* Sugerencias de búsqueda: NVDA ahora reproduce un sonido para indicar la "
"aparición de sugerencias de búsqueda. Más detalles sobre esto más adelante."

#: ..\python_docs\w10addoninternals.py:50
msgid ""
"* Live region change announcements in various apps. In the global plugin "
"portion, a way to define and track this event is included."
msgstr ""
"* Verbalización de cambio de regiones vivas en diversas aplicaciones. En la "
"parte de extensión global se incluye una forma de definir y rastrear este "
"evento."

#: ..\python_docs\w10addoninternals.py:51
msgid ""
"* Floating suggestions such as Emoji panel in Version 1709 (Fall Creators "
"Update) and hardware keyboard suggestions in Version 1803 (April 2018 "
"Update). This has been incorporated into NVDA 2018.3 release, but more "
"recent changes do require support from this add-on."
msgstr ""
"* Sugerencias flotantes como el panel de emojis en la versión 1709 "
"(actualización Fall Creators) y sugerencias del teclado hardware en la "
"versión 1803 (actualización de abril de 2018). Esto se ha incorporado en la "
"versión 2018.3 de NVDA, pero se necesita el complemento para dar apoyo a "
"algunos cambios más recientes."

#: ..\python_docs\w10addoninternals.py:52
msgid ""
"* Support for UIA notification event introduced in Version 1709. This became "
"part of NVDA in 2018.2, and refined in 2019.2 to interupt users when "
"important notifications are pending."
msgstr ""
"* Soporte para el evento de notificación de UIA introducido en la versión "
"1709. Esto pasó a formar parte de NVDA en la versión 2018.2, y se redefinió "
"en 2019.2 para interrumpir a los usuarios cuando hay notificaciones "
"importantes pendientes."

#: ..\python_docs\w10addoninternals.py:53
msgid ""
"* Providing more meaningful labels for certain controls such as update "
"history in Settings/Update and Security/Windows Update, sensitive to changes "
"in Insider Preview builds."
msgstr ""
"* Se ofrecen etiquetas más significativas para ciertos controles, como el "
"historial de actualizaciones en configuración / actualización y seguridad / "
"Windows Update, sensibles a los cambios en las compilaciones Insider Preview."

#: ..\python_docs\w10addoninternals.py:54
msgid "* Announcing tooltips from universal apps, now part of NVDA 2019.3."
msgstr ""
"* verbalización de consejos en aplicaciones universales, ahora parte de NVDA "
"2019.3."

#: ..\python_docs\w10addoninternals.py:55
msgid ""
"* Recognizing dialogs powered by XAML and various frameworks. Since NVDA "
"2018.3, NVDA itself takes care of this in most situations."
msgstr ""
"* Reconocimiento de diálogos proporcionados por XAML y diversos marcos de "
"trabajo. En NVDA 2018.3, el propio NVDA se encarga de esto en la mayoría de "
"situaciones."

#: ..\python_docs\w10addoninternals.py:56
msgid ""
"We'll meet various UIA controls and workarounds throughout this article."
msgstr "Conoceremos varios controles y soluciones a lo largo de este artículo."

#: ..\python_docs\w10addoninternals.py:57
msgid "## Windows 10 Objects"
msgstr "## Objetos para Windows 10"

#: ..\python_docs\w10addoninternals.py:58
msgid ""
"Windows 10 App Essentials add-on comes with Windows 10 Objects, a global "
"plugin that contains definitions of common controls encountered in Windows "
"10 and various universal apps. These include search suggestion handling, "
"tool tips for universal apps and so on. It also includes additional UIA "
"handling routines and configuration and update facility for the add-on (the "
"latter was removed in 2019)."
msgstr ""
"El complemento Windows 10 App Essentials viene con Objetos para Windows 10, "
"una extensión global que contiene definiciones de controles comunes que se "
"encuentran en Windows 10 y diversas aplicaciones universales. Aquí se "
"incluyen el manejo de sugerencias de búsqueda, consejos de aplicaciones "
"universales y así sucesivamente. También incluye procedimientos de manejo "
"adicionales para UIA, y las características de configuración y actualización "
"del complemento (esta última se eliminó en 2019)."

#: ..\python_docs\w10addoninternals.py:59
msgid "### Source code layout"
msgstr "### Estructura del código fuente"

#: ..\python_docs\w10addoninternals.py:60
msgid "The global plugin consists of the following: "
msgstr "La extensión global está formada por lo siguiente: "

#: ..\python_docs\w10addoninternals.py:61
msgid "* winTenObjs/__init__.py: the base global plugin."
msgstr "* winTenObjs/__init__.py: la extensión global básica."

#: ..\python_docs\w10addoninternals.py:62
msgid ""
"* winTenObjs/_UIAHandlerEx.py: additional UIA routines for ones NVDA does "
"not support natively (mostly for old NVDA releases). This module can come "
"and go without notice."
msgstr ""
"* winTenObjs/_UIAHandlerEx.py: procedimientos adicionales de UIA para los "
"que NVDA no ofrece soporte nativo (mayoritariamente para versiones antiguas "
"de NVDA). Este módulo puede ir y venir sin aviso previo."

#: ..\python_docs\w10addoninternals.py:63
msgid ""
"* winTenObjs/w10config.py: configuration and updates. As of June 2017, the "
"only thing configurable from Windows 10 App Essentials settings dialog is "
"update facility, which includes whether update check should be performed "
"automatically, update check interval and channel. This module is gone in "
"2019."
msgstr ""
"* winTenObjs/w10config.py: configuración y actualizaciones. A partir de "
"junio de 2017, lo único que se puede configurar desde el diálogo de ajustes "
"de Windows 10 App Essentials es el sistema de actualizaciones: si deberían "
"buscarse actualizaciones automáticamente o no, el intervalo de búsqueda de "
"actualizaciones y el canal. Este módulo se va en 2019."

#: ..\python_docs\w10addoninternals.py:64
msgid "The main global plugin file is laid out thus:"
msgstr "El archivo con la extensión global principal se presenta así:"

#: ..\python_docs\w10addoninternals.py:65
msgid "1. Usual add-on header such as copyright information."
msgstr ""
"1. Cabecera típica de cualquier complemento con información de derechos de "
"copia, autor, etc."

#: ..\python_docs\w10addoninternals.py:66
msgid ""
"2. UIA constants not included in NVDA, including property ID's such as "
"controller for event. Most are now part of NVDA itself."
msgstr ""
"2. Constantes UIA no incluidas en NVDA, incluyendo identificadores de "
"propiedades tales como los del evento controlador para (controller for). La "
"mayoría ya forman parte de NVDA."

#: ..\python_docs\w10addoninternals.py:67
msgid ""
"3. Classes defining various Windows 10 and universal app controls, including "
"search suggestions, looping selectors and so on."
msgstr ""
"3. Clases que definen diversos controles de Windows 10 y las aplicaciones "
"universales, incluyendo sugerencias de búsqueda, selectores en bucle y así "
"sucesivamente."

#: ..\python_docs\w10addoninternals.py:68
msgid ""
"4. The actual global plugin class, consisting of overlay class finder and "
"tracking routines for various UIA events (only available if NVDA is "
"restarted with debug logging enabled)."
msgstr ""
"4. La clase real de la extensión global, formada por un buscador de clases "
"de superposición y procedimientos de rastreo para diversos eventos UIA (sólo "
"disponibles si NVDA se reinicia con el registro de depuración habilitado)."

#: ..\python_docs\w10addoninternals.py:69
msgid "### Startup and shutdown"
msgstr "### Inicio y apagado"

#: ..\python_docs\w10addoninternals.py:70
msgid "When the add-on loads, it performs up to four tasks:"
msgstr "Cuando el complemento se carga, hace hasta cuatro cosas:"

#: ..\python_docs\w10addoninternals.py:71
msgid ""
"1. Enables tracking of missing UIA events. For example, until May 2017, "
"controller for event (an event fired by a control that depends on another "
"control such as an edit field with search suggestions) wasn't available in "
"NVDA screen reader, but search suggestion announcement was made possible as "
"this add-on added this event."
msgstr ""
"1. Activa el rastreo de eventos UIA ausentes. Por ejemplo, hasta mayo de "
"2017, el controlador para evento (un evento producido por un control que "
"depende de otro control, como un campo de texto con sugerencias de búsqueda) "
"no estaba disponible en el lector de pantalla NVDA, pero la verbalización de "
"sugerencias de búsqueda se hizo posible cuando este complemento añadió este "
"evento."

#: ..\python_docs\w10addoninternals.py:72
msgid ""
"2. Extends or replaces NVDA's UIA support subsystem if NVDA does not come "
"with support for newer UIA interfaces. This is the case for notification "
"event which NVDA did not support prior to 2018.2."
msgstr ""
"2. Extiende o reemplaza el subsistema de soporte UIA de NVDA si NVDA no "
"viene con soporte para las nuevas interfaces UIA. Es el caso del evento de "
"notificación, que NVDA no soportaba de forma nativa en versiones anteriores "
"a la 2018.2."

#: ..\python_docs\w10addoninternals.py:73
msgid ""
"3. Adds user interface elements for this add-on, specifically add-on "
"settings if appropriate."
msgstr ""
"3. Añade elementos de interfaz de usuario para este complemento, y más "
"concretamente ajustes del complemento si es apropiado."

#: ..\python_docs\w10addoninternals.py:74
msgid "4. Checks for add-on updates if told to do so."
msgstr ""
"4. Comprueba actualizaciones del complemento si le hemos indicado que lo "
"haga."

#: ..\python_docs\w10addoninternals.py:75
msgid ""
"The only thing done at shutdown is terminating the update check facility and "
"removing user interface elements. This method, along with last two steps "
"from the list above, no longer exists as of 2019."
msgstr ""
"Lo único que se hace al apagarlo es desactivar su sistema de comprobación de "
"actualizaciones y eliminar los elementos de interfaz de usuario. Este "
"método, junto con los dos últimos elementos de la lista anterior, ya no "
"existe a partir de 2019."

#: ..\python_docs\w10addoninternals.py:76
msgid "### Notable Windows 10 objects and features"
msgstr "### Objetos de Windows 10 y características destacables"

#: ..\python_docs\w10addoninternals.py:77
msgid "#### Sounds to indicate appearance of search suggestions"
msgstr "#### Sonidos para indicar la aparición de sugerencias de búsqueda"

#: ..\python_docs\w10addoninternals.py:78
msgid ""
"In some edit fields such as search box in Start menu, a list of suggestions "
"will appear while entering text. for newer implementations, UIA controller "
"for event is raised if this happens, with different screen readers reacting "
"differently. For example, when typing something into Start search box while "
"using Narrator, Narrator will play a sound to indicate appearance of "
"suggestions, while old NVDA releases will announce top suggestion."
msgstr ""
"En algunos cuadros de edición, como el de búsqueda del menú inicio, "
"aparecerá una lista de sugerencias mientras se escribe texto. En "
"implementaciones más nuevas, se lanza el evento controlador para de UIA si "
"esto ocurre, con los distintos lectores de pantalla reaccionando de forma "
"diferente. Por ejemplo, al escribir texto en el cuadro de búsqueda del menú "
"inicio mientras se usa el narrador, este reproducirá un sonido indicando la "
"aparición de sugerencias, mientras que las versiones viejas de NVDA "
"verbalizarán la sugerencia superior."

#: ..\python_docs\w10addoninternals.py:79
msgid ""
"Because I felt it would be best to let users be notified when suggestions "
"appear and disappear (and in some respects, follow Narrator's footsteps), I "
"have implemented code to handle search suggestions. This is divided into "
"four components:"
msgstr ""
"Ya que sentía que lo mejor era notificar a los usuarios cuando las "
"sugerencias aparecen y desaparecen (y en algunos aspectos seguir los pasos "
"del narrador), he implementado código para manejar las sugerencias de "
"búsqueda. Este código se divide en cuatro componentes:"

#: ..\python_docs\w10addoninternals.py:80
msgid ""
"* One or more classes used to identify edit fields that does raise UIA "
"controller for event and ways to identify them. The reason for using several "
"classes for the same object is due to compatibility reasons, as older NVDA "
"releases does not come with a search field class. These classes include two "
"events related to controller for event:"
msgstr ""
"* Una o más clases usadas para identificar cuadros de edición que lanzan el "
"evento de UIA controlador para, y formas de identificarlas. El motivo por el "
"que se usan clases para el mismo objeto tiene que ver con la compatibilidad, "
"ya que las versiones antiguas de NVDA no vienen con una clase para los "
"cuadros de búsqueda. Estas clases incluyen dos eventos relacionados con el "
"evento controlador para:"

#: ..\python_docs\w10addoninternals.py:81
msgid ""
"\t* `event_suggestionsOpened`: called when suggestions appear. Some "
"controls, notably embedded Cortana search box when opening a new Sets tab, "
"does not fire this event properly."
msgstr ""
"\t* `event_suggestionsOpened`: llamado cuando aparecen sugerencias. Algunos "
"controles, especialmente el cuadro de búsqueda incrustado de Cortana que "
"sale al abrir una nueva pestaña de conjuntos, no disparan este evento "
"adecuadamente."

#: ..\python_docs\w10addoninternals.py:82
msgid ""
"\t* `event_suggestionsClosed`: called when suggestions disappear. There are "
"controls that does not raise this, including Edge's address omnibar."
msgstr ""
"\t* `event_suggestionsClosed`: llamado cuando desaparecen las sugerencias. "
"Hay controles que no lanzan estos eventos, como la barra de direcciones de "
"Microsoft Edge."

#: ..\python_docs\w10addoninternals.py:83
msgid "* A class representing the suggestion items themselves."
msgstr "* Una clase que representa los elementos de sugerencia en sí."

#: ..\python_docs\w10addoninternals.py:84
msgid "* A set of sounds to indicate appearance/disappearance of suggestions."
msgstr ""
"* Un conjunto de sonidos para indicar la aparición y desaparición de "
"sugerencias."

#: ..\python_docs\w10addoninternals.py:85
msgid ""
"* A compatibility layer for old and upcoming NVDA releases as noted above."
msgstr ""
"* Una capa de compatibilidad para versiones de NVDA antiguas y futuras, tal "
"y como se ha resaltado arriba."

#: ..\python_docs\w10addoninternals.py:86
msgid ""
"In addition, in some cases, it is helpful to announce how many suggestions "
"have appeared, thus a routine has been added to announce this. With this "
"added, the complete picture is as follows:"
msgstr ""
"Además, en algunos casos, es útil verbalizar cuántas sugerencias han "
"aparecido, y por ello se ha añadido un procedimiento para hacerlo. Con esto "
"añadido, el cuadro completo es el siguiente:"

#: ..\python_docs\w10addoninternals.py:87
msgid "1. User types text into a search field."
msgstr "1. El usuario escribe texto en un cuadro de búsqueda."

#: ..\python_docs\w10addoninternals.py:88
msgid ""
"2. NVDA will notice controller for event and will look for suggestions list. "
"If such a list is found, NVDA will play the suggestion sound by raising "
"suggestions opened event."
msgstr ""
"2. NVDA recibirá el evento controlador para y buscará la lista de "
"sugerencias. Si dicha lista se encuentra, NVDA reproducirá el sonido de "
"sugerencias llamando al evento suggestionsOpened."

#: ..\python_docs\w10addoninternals.py:89
msgid ""
"3. If suggestions are found, it'll announce the top suggestion or suggestion "
"count. The former is for Start menu, while the latter is for other edit "
"fields."
msgstr ""
"3. Si se encuentran sugerencias, NVDA verbalizará la sugerencia superior o "
"la cantidad de sugerencias. Lo primero se hace en el menú inicio, mientras "
"que lo último se hace en los demás cuadros de búsqueda."

#: ..\python_docs\w10addoninternals.py:90
msgid ""
"4. One can then use up or down arrow keys to move through suggestions, then "
"press Enter to select or Escape to close suggestions list. When closing "
"suggestions list, NVDA will play suggestions close sound."
msgstr ""
"4. Se pueden usar las flechas arriba y abajo para moverse por las "
"sugerencias, y pulsar intro para seleccionar o escape para cerrar la lista "
"de sugerencias. Al cerrar la lista de sugerencias, NVDA reproducirá el "
"sonido de desaparición de sugerencias."

#: ..\python_docs\w10addoninternals.py:91
msgid ""
"Since NVDA 2017.3, suggestion announcement (not the count) is part of the "
"screen reader."
msgstr ""
"Desde NVDA 2017.3, la verbalización de sugerencias de búsqueda (y no el "
"total) es parte del lector de pantalla."

#: ..\python_docs\w10addoninternals.py:92
#, fuzzy
#| msgid ""
#| "Note that the routines described above was done at a time when it was "
#| "desirable to detect all possible search fields. However, it was found "
#| "that some workarounds were app specific, thus in June 2019, it was "
#| "decided to transfer some search field handling to app modules. This is "
#| "especially the case with address omnibar in Microsoft Edge (EdgeHTML "
#| "version) where the global plugin’s suggestions closed event handler did "
#| "not apply if Edge is in use. Along the way, handling rarely used search "
#| "fields that appeared in one or two apps (such as People app search field "
#| "in old app releases) were dropped."
msgid ""
"Note that the routines described above was done at a time when it was "
"desirable to detect all possible search fields. However, it was found that "
"some workarounds were app specific, thus in June 2019, it was decided to "
"transfer some search field handling to app modules. This is especially the "
"case with address omnibar in legacy Microsoft Edge (EdgeHTML version) where "
"the global plugin’s suggestions closed event handler did not apply if Edge "
"is in use. Along the way, handling rarely used search fields that appeared "
"in one or two apps (such as People app search field in old app releases) "
"were dropped."
msgstr ""
"Ten en cuenta que los procedimientos descritos más arriba se hicieron de una "
"vez cuando se quisieron detectar todos los campos de búsqueda. Sin embargo, "
"se descubrió que algunas aplicaciones necesitaban correcciones específicas, "
"por lo que en junio de 2019 se decidió transferir el manejo de algunos "
"campos de búsqueda a los módulos de aplicación. Este caso concretamente es "
"el que se aplica a la barra de direcciones de Microsoft Edge (versión "
"EdgeHTML), donde el manejador de evento de sugerencias de búsqueda cerradas "
"de la extensión global no se aplicaba si Edge estaba en uso. El manejo de "
"campos de búsqueda extraños que apareció en una o dos aplicaciones (como el "
"campo de búsqueda de la aplicación Personas en versiones antiguas de la "
"aplicación) fue eliminado."

#: ..\python_docs\w10addoninternals.py:93
msgid "#### Announcing notifications"
msgstr "#### Verbalizando notificaciones"

#: ..\python_docs\w10addoninternals.py:94
msgid ""
"Windows 10 Version 1709 (Fall Creators Update) introduces a new event to let "
"apps send text to be announced by UIA clients such as NVDA. One of the jobs "
"of Windows 10 Objects is to catch this and announce notifications for NVDA "
"releases which does not support this natively."
msgstr ""
"La actualización 1709 de Windows 10 (Fall Creators) introduce un nuevo "
"evento para permitir a las aplicaciones enviar texto que sea verbalizado por "
"clientes UIA como NVDA. Una de las tareas de Objetos de Windows 10 es "
"capturarlo y verbalizar notificaciones en versiones de NVDA que no lo "
"soporten de forma nativa."

#: ..\python_docs\w10addoninternals.py:95
msgid ""
"Because old NVDA releases do not support the new notification event "
"natively, a trick is included with the add-on to allow NVDA to detect and "
"handle notifications. This is done by extending UIA support subsystem "
"through an internal module that takes over the NVDA's own routines. Among "
"other things, this extended subsystem includes definitions for UIA "
"notification event handler, and this subsystem takes over if NVDA 2018.1.x "
"is running on Windows 10 Version 1709 and later."
msgstr ""
"Como NVDA no soporta el nuevo evento de notificación de forma nativa, se "
"incluye una solución con este complemento para permitir a NVDA detectar y "
"procesar notificaciones. Esto se hace extendiendo el subsistema de soporte "
"UIA a través de un módulo interno que tiene prioridad sobre los "
"procedimientos de NVDA. Entre otras cosas, este subsistema extendido incluye "
"definiciones para el manejador del evento de notificación de UIA, y tiene en "
"cuenta si se está ejecutando NVDA 2018.1.x o una versión posterior en "
"Windows 10 Fall Creators y versiones posteriores."

#: ..\python_docs\w10addoninternals.py:96
msgid "The notification event handler takes five keyword arguments:"
msgstr "El manejador de eventos de notificación recibe cinco argumentos clave:"

#: ..\python_docs\w10addoninternals.py:97
msgid "* Sender: the UIA element that raised the event."
msgstr "* Remitente: el elemento UIA que ha lanzado el evento."

#: ..\python_docs\w10addoninternals.py:98
msgid "* Notification kind: the kind of notification."
msgstr "* Tipo de notificación: el tipo de notificación."

#: ..\python_docs\w10addoninternals.py:99
msgid ""
"* Notification processing: how NVDA should process incoming notification."
msgstr ""
"* Procesado de notificación: cómo debería NVDA procesar la notificación "
"entrante."

#: ..\python_docs\w10addoninternals.py:100
msgid "* Display string: notification text."
msgstr "* Cadena a mostrar: texto de la notificación."

#: ..\python_docs\w10addoninternals.py:101
msgid "* Activity ID: the unique identifier for the notification."
msgstr "* ID de actividad: el identificador único de la notificación."

#: ..\python_docs\w10addoninternals.py:102
msgid ""
"As of October 2018, NVDA itself announces notifications for all apps "
"(especially for the currently active app) except one or two apps where this "
"would cause issues, thus the add-on is no longer involved in announcing many "
"notifications except those that could cause issues."
msgstr ""
"Desde octubre de 2018, NVDA verbaliza notificaciones para todas las "
"aplicaciones (especialmente la aplicación activa), excepto una o dos donde "
"esto daría problemas, por lo que el complemento ya no está implicado en el "
"anuncio de muchas notificaciones salvo aquellas que podrían causar problemas."

#: ..\python_docs\w10addoninternals.py:103
msgid "#### Tracking UIA events for controls"
msgstr "#### Rastreo de eventos UIA en controles"

#: ..\python_docs\w10addoninternals.py:104
msgid ""
"The Windows 10 Objects global plugin also has ability to track UIA events "
"for controls and log info  about them, executed via `uiaDebugLogging` "
"function that takes an object and the event name. This function records the "
"following if NVDA is started with debug logging enabled or told to monitor "
"specific events and/or events from specific apps:"
msgstr ""
"La extensión global Objetos de Windows 10 tiene también la capacidad de "
"rastrear eventos UIA para controles y registrar información sobre ellos, "
"ejecutando la función `uiaDebugLogging`, que recibe el objeto y el nombre "
"del evento. Esta función registra lo siguiente si NVDA se ha iniciado con el "
"registro de depuración habilitado o se le ha indicado que monitorice eventos "
"específicos y / o eventos de aplicaciones concretas:"

#: ..\python_docs\w10addoninternals.py:105
msgid "* What the object actually is."
msgstr "* Qué es realmente el objeto."

#: ..\python_docs\w10addoninternals.py:106
msgid "* Object name."
msgstr "* Nombre del objeto."

#: ..\python_docs\w10addoninternals.py:107
msgid "* Name of the event being logged."
msgstr "* Nombre del evento que se registra."

#: ..\python_docs\w10addoninternals.py:108
msgid "* App where the control can be found (specifically, the app module)."
msgstr ""
"* Aplicación donde puede encontrarse el control (específicamente, el módulo "
"de aplicación)."

#: ..\python_docs\w10addoninternals.py:109
msgid "* Automation ID."
msgstr "* ID de automatización."

#: ..\python_docs\w10addoninternals.py:110
msgid "* UIA class name."
msgstr "* Nombre de clase UIA."

#: ..\python_docs\w10addoninternals.py:111
msgid ""
"* For controller for event, the list of objects the given control depends on."
msgstr ""
"* Para el evento controlador para, la lista de objetos de la que depende el "
"control dado."

#: ..\python_docs\w10addoninternals.py:112
msgid "* For tooltip open event, the GUI framework that powers the element."
msgstr ""
"* Para el evento de consejo abierto, el motor de interfaz gráfica que "
"proporciona el elemento."

#: ..\python_docs\w10addoninternals.py:113
msgid "* For item status event, new item status text."
msgstr ""
"* Para el evento de estado del elemento, el nuevo texto de estado del "
"elemento."

#: ..\python_docs\w10addoninternals.py:114
msgid ""
"For notification events, NVDA records event parameters from the event "
"handler method itself."
msgstr ""
"En caso de que haya eventos de notificación, NVDA registra los parámetros "
"del evento desde el mismo método manejador del evento."

#: ..\python_docs\w10addoninternals.py:115
msgid "#### Looping selectors"
msgstr "#### Selectores en bucle"

#: ..\python_docs\w10addoninternals.py:116
msgid ""
"A looping selector is a combo box-like control where the selection loops "
"around. This is employed in places such as Alarms and Clock, Settings/Update "
"and Security/Windows Update/active hours and so on."
msgstr ""
"Un selector en bucle es un control similar a un cuadro combinado, donde la "
"selección está en bucle y se repite. Se emplea en lugares como Reloj y "
"alarmas, Configuración / Actualización y seguridad / Windows Update / Horas "
"activas y así sucesivamente."

#: ..\python_docs\w10addoninternals.py:117
#, fuzzy
#| msgid ""
#| "In older Windows 10 and universal app releases, when changing selector "
#| "values, item selected UIA event wasn't fired. To get around this, the add-"
#| "on will examine states for each item and announce if an item has selected "
#| "state. This isn't the case for newer implementations, but for backward "
#| "compatibility, the old routines are kept. This has been enhanced in NVDA "
#| "2019.1, and since June 2019, the add-on is no longer involved in keeping "
#| "an eye on this control."
msgid ""
"In older Windows 10 and universal app releases, when changing selector "
"values, item selected UIA event wasn't fired. To get around this, the add-on "
"will examine states for each item and announce if an item has selected "
"state. This isn't the case for newer implementations, but for backward "
"compatibility, the old routines are kept. This has been enhanced in NVDA "
"2019.1, and since June 2019, the add-on is no longer involved in keeping an "
"eye on this control as NVDA supports it natively."
msgstr ""
"En versiones antiguas de Windows 10 y las aplicaciones universales, al "
"cambiar los valores del selector, no se disparaba el evento UIA elemento "
"seleccionado. Para solucionar esto, el complemento examinará los estados "
"para cada elemento y verbalizará si un elemento tiene el estado "
"seleccionado. Este no es el caso para implementaciones más nuevas, pero se "
"conservan los procedimientos para garantizar compatibilidad hacia atrás. "
"Esto se ha mejorado en NVDA 2019.1, y desde junio de 2019, el complemento ya "
"no vigila esta situación."

#: ..\python_docs\w10addoninternals.py:118
msgid "#### Live region change events"
msgstr "#### Eventos de cambio de región viva"

#: ..\python_docs\w10addoninternals.py:119
msgid ""
"Some controls are live regions - that is, a control whose content denotes "
"live text, such as progress of something, alerts and so on. Because of odd "
"live region change event implementations, older NVDA releases does not "
"support this event natively, but NVDA 2017.3 and later includes a trivial "
"implementation where NVDA will announce the live region text i.e. object "
"name."
msgstr ""
"Algunos controles son regiones vivas, o lo que es lo mismo: un control cuyo "
"contenido denota texto vivo, como el progreso de algo, alertas y demás. "
"Debido a implementaciones defectuosas del evento de cambio de región viva, "
"las versiones más antiguas de NVDA no soportan este evento de forma nativa, "
"pero en NVDA 2017.3 y versiones posteriores se incluye una implementación "
"trivial donde NVDA verbalizará el texto de la región viva, como el nombre "
"del objeto."

#: ..\python_docs\w10addoninternals.py:120
msgid ""
"The Windows 10 Objects goes one step further by recording instances of this "
"event and providing workarounds for specific cases. These include announcing "
"correct text for Edge alerts (see below), preventing repeat announcements in "
"some apps and so on."
msgstr ""
"Objetos de Windows 10 va un paso más allá registrando instancias de este "
"evento y ofreciendo soluciones para casos específicos. Aquí se incluye la "
"verbalización correcta de texto para las alertas en Edge (mira más abajo), "
"la prevención de verbalizaciones repetidas en algunas aplicaciones, etc."

#: ..\python_docs\w10addoninternals.py:121
msgid "#### Recognizing various dialogs"
msgstr "#### Reconocimiento de diversos diálogos"

#: ..\python_docs\w10addoninternals.py:122
msgid ""
"Despite not being identified as such, some windows are actually dialogs. "
"These include pop-up dialog for uninstaling apps, various dialogs found in "
"Settings app and so on."
msgstr ""
"Algunas ventanas son realmente diálogos, aunque no se identifiquen como "
"tales. Estas incluyen los diálogos emergentes para desinstalar aplicaciones, "
"diversos diálogos que se encuentran en la aplicación de configuración y "
"demás."

#: ..\python_docs\w10addoninternals.py:123
msgid ""
"In old add-on releases, NVDA would consult a list of known dialog class "
"names in hopes of catching a dialog. In newer releases, especially if run on "
"Windows 10 Version 1809 and later, UIA IsDialog property is used to catch "
"dialog elements. Once dialogs are recognized, NVDA will read contents of "
"these dialogs automatically when they appear. This has been simplified in "
"NVDA 2018.3 as NVDA itself will try its best to recognize more dialogs, "
"including those marked as a dialog via UIA in Version 1809. However, there "
"are windows that are actually dialogs, so the add-on still ships with a list "
"of known dialog classes to be consulted by NVDA."
msgstr ""
"En versiones antiguas del complemento, NVDA habría consultado una lista de "
"nombres de clases conocidas de diálogos con la esperanza de detectar alguno. "
"En las nuevas versiones, especialmente si se ejecutan en Windows 10 versión "
"1809 o posterior, la propiedad UIA IsDialog se usa para detectar elementos "
"de diálogo. Una vez se reconocen los diálogos, NVDA leerá su contenido "
"automáticamente tan pronto como aparezcan. Esto se ha simplificado en NVDA "
"2018.3, ya que el propio NVDA dará lo mejor de sí mismo para reconocer más "
"diálogos, incluyendo aquellos marcados como diálogos mediante UIA en la "
"versión 1809. Sin embargo, existen ventanas que son realmente diálogos, por "
"lo que el complemento todavía incorpora una lista de clases de diálogo "
"conocidas para que NVDA las consulte."

#: ..\python_docs\w10addoninternals.py:124
msgid "## App modules for universal apps"
msgstr "## Módulos de aplicación para aplicaciones universales"

#: ..\python_docs\w10addoninternals.py:125
msgid ""
"In addition to Windows 10 Objects global plugin, the add-on comes with app "
"modules designed to provide extra support for various universal apps that "
"comes with Windows 10. These modules include enhancers and/or fixers, "
"broadly divided into five categories:"
msgstr ""
"Además de la extensión global Objetos de Windows 10, el complemento viene "
"con módulos de aplicación diseñados para proporcionar soporte extra para "
"diversas aplicaciones universales que vienen con Windows 10. Estos módulos "
"incluyen mejoras y/o solución de problemas, principalmente divididas en "
"cinco categorías:"

#: ..\python_docs\w10addoninternals.py:126
msgid "1. Adding extra features."
msgstr "1. Añadir funciones extra."

#: ..\python_docs\w10addoninternals.py:127
msgid "2. Supporting new technologies."
msgstr "2. Dar soporte a nuevas tecnologías."

#: ..\python_docs\w10addoninternals.py:128
msgid ""
"3. Announcing (or, more recently, suppressing extraneous announcement of) "
"information in various situations."
msgstr ""
"3. Verbalizar (o, más recientemente, suprimir verbalización sobrante de) "
"información en diversas situaciones."

#: ..\python_docs\w10addoninternals.py:129
msgid "4. Workarounds for UIA issues."
msgstr "4. Solución a problemas de UIA."

#: ..\python_docs\w10addoninternals.py:130
msgid ""
"5. Respond to changes in apps, and in at least three occasions, adding "
"aliases due to renamed executable names."
msgstr ""
"5. Respuesta a cambios en aplicaciones, y en al menos tres ocasiones, añadir "
"algunos alias para aplicaciones con el nombre del ejecutable cambiado."

#: ..\python_docs\w10addoninternals.py:131
msgid "The modules and enhancers/fixers applied are:"
msgstr "Los módulos, mejoras y soluciones aplicadas son:"

#: ..\python_docs\w10addoninternals.py:132
msgid "* Calculator: selectively announce calculator display."
msgstr "* Calculadora: verbaliza la pantalla de manera selectiva."

#: ..\python_docs\w10addoninternals.py:133
msgid "* Calendar: suppress read-only state announcement in various controls."
msgstr ""
"* Calendario: suprime el anunciado del estado de sólo lectura en múltiples "
"controles."

#: ..\python_docs\w10addoninternals.py:134
msgid ""
"* Cortana/Start menu/Windows Search (classic Cortana): suppress double "
"announcement of suggestion result item in some cases, staying silent when "
"user is dictating to Cortana, handling bad UIA implementations."
msgstr ""
"* Cortana / Menú inicio / Windows Search (Cortana clásico): suprime la "
"verbalización doble del elemento de sugerencia de resultado en algunos "
"casos, permanece en silencio cuando el usuario dicta a Cortana, y procesa "
"malas implementaciones de UIA."

#: ..\python_docs\w10addoninternals.py:135
msgid "* Cortana/conversations (new Cortana): announcing Cortana's responses."
msgstr ""
"* Cortana/conversaciones (nuevo Cortana): se anuncian las respuestas de "
"Cortana."

#: ..\python_docs\w10addoninternals.py:136
msgid ""
"* Mail: table navigation commands in message list, suppress read-only "
"announcement in email content, app alias for hxmail.exe and hxoutlook.exe "
"(the latter for updates released in May 2017)."
msgstr ""
"* Correo: órdenes de navegación de tablas en la lista de mensajes, elimina "
"la verbalización de sólo lectura en el contenido del correo, alias de "
"aplicación para hxmail.exe y hxoutlook.exe (el más reciente para "
"actualizaciones publicadas después de mayo del 2017)."

#: ..\python_docs\w10addoninternals.py:137
msgid ""
"* Maps: play location coordinates for map items, suppress repeated live "
"region announcements, aliases to support old and new Maps releases (the old "
"alias, maps_windows, is gone)."
msgstr ""
"* Mapas: reproduce coordenadas de eventos para elementos en el mapa, se "
"suprime la verbalización repetida en el cambio de regiones vivas, alias para "
"dar soporte a versiones viejas y nuevas de la aplicación (el alias viejo, "
"maps_windows, ya no está)."

#: ..\python_docs\w10addoninternals.py:138
msgid ""
"* Microsoft Edge (classic EdgeHTML version): announce correct alert text and "
"enhancements for address omnibar, supports both the overall Microsoft Edge "
"process and the content process (microsoftedgecp.exe)."
msgstr ""
"* Microsoft Edge (versión EdgeHTML clásica): verbaliza el texto correcto en "
"alertas e incluye mejoras para la barra de direcciones, soporta el proceso "
"de Edge y el proceso de contenido (microsoftedgecp.exe)."

#: ..\python_docs\w10addoninternals.py:139
msgid ""
"* Microsoft Store: announce needed information when live region changed "
"event is fired by some controls, aliases to support old and new Store "
"versions (the old alias, winstore_mobile, is no more)."
msgstr ""
"* Tienda de Microsoft: verbaliza información necesaria cuando se dispara el "
"evento de cambio de región viva en algunos controles, alias para soportar "
"versiones antiguas y nuevas de la tienda (el alias antiguo, winstore_mobile, "
"ya no está)."

#: ..\python_docs\w10addoninternals.py:140
msgid ""
"* Modern keyboard/text input host: support for emoji panel, dictation, "
"hardware input suggestions, and pasting clipboard items (Version 1809), part "
"of NVDA since 2018.3."
msgstr ""
"* Teclado moderno / host de entrada de texto: soporte para el panel de "
"emojis, el dictado, las sugerencias de entrada por hardware y pegar "
"elementos desde el portapapeles (versión 1809), parte de NVDA desde la "
"versión 2018.3."

#: ..\python_docs\w10addoninternals.py:141
msgid "* MSN Weather: use up or down arrow keys to read forecast information."
msgstr ""
"* El tiempo: usa las flechas arriba o abajo para leer la información "
"meteorológica."

#: ..\python_docs\w10addoninternals.py:142
msgid ""
"* Open With: announce open with dialog content in recent Windows 10 releases."
msgstr ""

#: ..\python_docs\w10addoninternals.py:143
msgid "* People: announcing first suggestion when looking for a contact."
msgstr "* Personas: se anuncia la primera sugerencia al buscar un contacto."

#: ..\python_docs\w10addoninternals.py:144
msgid ""
"* Settings: selectively announce various status information, provide correct "
"labels for certain controls."
msgstr ""
"* Configuración: verbaliza de forma selectiva diversa información de estado, "
"proporciona etiquetas correctas para ciertos controles."

#: ..\python_docs\w10addoninternals.py:145
msgid ""
"* Shell Experience Host: work around some UIA state information mismatch and "
"announce item status in Action Center. Action Center support, including "
"reclassifying brightness button as a proper button is now part of NVDA "
"2019.1."
msgstr ""
"* Host de experiencia con la Shell (Shell Experience Host): soluciona "
"pequeñas pérdidas de información de estado de UIA y anuncia el estado de los "
"elementos en el centro de actividades. El soporte para el centro de "
"actividades, incluyendo la reclasificación del botón de brillo como un botón "
"correctamente, ahora forma parte de NVDA 2019.1."

#: ..\python_docs\w10addoninternals.py:146
msgid "### Adding useful features in apps"
msgstr "### Añadiendo funciones útiles en aplicaciones"

#: ..\python_docs\w10addoninternals.py:147
msgid ""
"The following app modules add functionality unique to NVDA and/or commands "
"that are used to improve user experience when using apps:"
msgstr ""
"Los siguientes módulos de aplicación añaden funcionalidad específica de NVDA "
"y / o órdenes utilizadas exclusivamente para mejorar la experiencia de "
"usuario al utilizar aplicaciones:"

#: ..\python_docs\w10addoninternals.py:148
msgid ""
"* Maps (maps.py): when using object navigation to examine a map, a tone will "
"be played to indicate where things are located on the map. This is achieved "
"by defining a custom handler for `event_becomeNavigatorObject` that'll take "
"the coordinates of the object (in pixels) and play a tone, essentially "
"emulating mouse coordinate beeps in NVDA. The app module also allows users "
"to hear new locations when using street view to navigate the map, and this "
"is done through handlers for live region changed event."
msgstr ""
"* Mapas (maps.py): al usar navegación de objetos para examinar un mapa, se "
"reproducirá un tono para indicar dónde se ubican las cosas en el mapa. Esto "
"se hace definiendo un manejador personalizado para "
"`event_becomeNavigatorObject` que tomará las coordenadas del objeto (en "
"píxeles) y reproducirá un tono, emulando esencialmente los pitidos de "
"coordenadas del ratón de NVDA. El módulo de aplicación también permite a los "
"usuarios oír nuevas ubicaciones al usar la vista de calle para navegar por "
"el mapa, y esto se ha realizado a través de manejadores para el evento de "
"región viva cambiada."

#: ..\python_docs\w10addoninternals.py:149
msgid ""
"* Mail (hxoutlook.py): when focused on messages list, one can use table "
"navigation commands (Control+Alt+arrow keys) to review message headers. This "
"is possible thanks to two things: headers are child objects of the message "
"item, and because of this, `NVDAObjects.behaviors.RowWithFakeNavigation` "
"class can be employed to add this functionality."
msgstr ""
"* Correo (hxmail.py): al tener el foco en la lista de mensajes, se pueden "
"usar órdenes de navegación de tablas (ctrl+alt+flechas) para revisar los "
"encabezados del mensaje. Esto es posible gracias a dos cosas: los "
"encabezados son objetos hijo del elemento del mensaje, y por esto, se puede "
"emplear la clase `NVDAObjects.behaviors.RowWithFakeNavigation` para añadir "
"esta funcionalidad."

#: ..\python_docs\w10addoninternals.py:150
msgid ""
"* MSN Weather (microsoft_msn_weather.py): this app module, contributed by "
"Derek Riemer, allows users to use up and down arrow keys to read forecast "
"information, achieved by calling corresponding review cursor movement "
"commands to move by line."
msgstr ""
"* El tiempo (Microsoft_msn_weather.py): este módulo de aplicación, aportado "
"por Derek Riemer, permite a los usuarios pulsar las flechas arriba y abajo "
"para leer información meteorológica, llamando a las órdenes correspondientes "
"de movimiento del cursor de revisión para moverse por línea."

#: ..\python_docs\w10addoninternals.py:151
msgid "#### A note about modern keyboard"
msgstr "#### Una nota sobre el teclado moderno"

#: ..\python_docs\w10addoninternals.py:152
msgid ""
"Modern keyboard, sometimes called Composable Shell "
"(windowsinternal_composableshell_experiences_textinput_inputapp.py) and "
"nowadays called Text Input Host, is the name of the app that provides "
"various features, including emoji panel, dictation, hardware input "
"suggestions, listing items to be pasted from cloud clipboard and many other "
"input related features. This is not exactly an app, but more towards a "
"floating overlay, much akin to touch keyboard on touchscreen devices. "
"Powering these is a redesigned touch keyboard where XAML-based touch panel "
"(with its own process) is used."
msgstr ""
"Teclado moderno, en ocasiones llamado Composable Shell "
"(windowsinternal_composableshell_experiences_textinput_inputapp.py), y hoy "
"en día llamado host de entrada de texto, es el nombre de la aplicación que "
"proporciona diversas características, incluyendo el panel de emojis, el "
"dictado, las sugerencias de entrada por hardware, el listado de elementos "
"que pueden pegarse desde el portapapeles en la nube y muchas más funciones "
"relacionadas con la entrada. No se trata exactamente de una aplicación, sino "
"que está más enfocado hacia una capa flotante, similar a los teclados en "
"pantalla que se muestran en dispositivos táctiles. Para potenciarlos, hay un "
"teclado táctil rediseñado donde se usa el panel táctil basado en XAML (con "
"su propio proceso)."

#: ..\python_docs\w10addoninternals.py:153
msgid ""
"In Windows 10 Insider Preview build 16215 and later, it is possible for "
"users to browse and select emojis to insert in an edit field. This is done "
"by pressing Windows+period (.) or Windows+semicolon (;). A floating panel of "
"emoji categories and emojis will appear. One can then use arrow keys to move "
"through emojis or Tab and Shift+Tab to cycle through categories. In build "
"16226, one can type emoji descriptions to narrow the emoji field."
msgstr ""
"En Windows 10 Insider Preview compilación 16215 y posteriores, se da la "
"posibilidad a los usuarios de explorar y seleccionar emojis para insertar en "
"un cuadro de edición. Esto se hace pulsando Windows+punto (.) o Windows"
"+punto y coma (;). Se mostrará un panel flotante con emojis y categorías de "
"emojis. A partir de ahí se pueden usar las flechas para desplazarse entre "
"los emojis, o tab y shift+tab para saltar por las categorías. En la "
"compilación 16226, se pueden teclear descripciones de emojis para acotar el "
"emoji deseado."

#: ..\python_docs\w10addoninternals.py:154
msgid ""
"In build 17666 and later, this panel has been redesigned. Instead of using "
"Tab key to move between categories, one would press Tab to move between "
"emoji grid and categories. In case of People category, pressing Tab will let "
"you move to skin tones list where you can use arrow keys to select a skin "
"tone, then press Tab to move to emoji grid."
msgstr ""
"En la compilación 17666 y posteriores, se ha rediseñado este panel. En vez "
"de usar el tabulador para moverse entre categorías, ahora se pulsa el "
"tabulador para moverse entre las categorías y la cuadrícula de emojis. En el "
"caso de la categoría personas, el tabulador te hará moverte a la lista de "
"tonos de piel, en la que puedes usar las flechas para seleccionar un tono de "
"piel, y luego pulsar tabulador para moverte a la cuadrícula de emojis."

#: ..\python_docs\w10addoninternals.py:155
msgid ""
"Build 18305 and later brought another design change to this panel. In "
"addition to selecting emojis, it also hosts two new grand categories named "
"kaomoji (\"face characters\" in Japanese) and symbols. When one presses Tab, "
"one will eventually reach category list with three items: emoji, kaomoji, "
"and symbols. Just like selecting emoji categories, pressing Enter will "
"switch the panel among these modes."
msgstr ""
"La compilación 18305 y posteriores trajeron otro cambio de diseño a este "
"panel. Además de seleccionar emojis, también hay otras dos categorías "
"principales llamadas kaomoji (\"caracteres faciales\" en japonés) y "
"símbolos. Al pulsar tabulador, se alcanzará la lista de categorías con tres "
"elementos: emoji, kaomoji y símbolos. Al igual que con las categorías de "
"emojis, al pulsar intro se alternará el panel entre estos modos."

#: ..\python_docs\w10addoninternals.py:156
#, fuzzy
#| msgid ""
#| "Build 18963 renamed Modern Keyboard to Text Input Host, along wth "
#| "bringing refined version of Input Method Editor (IME) for certain "
#| "languages. For languages such as Japanese, the modern IME hosted by Text "
#| "Input Host is used."
msgid ""
"Build 18963 renamed Modern Keyboard to Text Input Host, along with bringing "
"refined version of Input Method Editor (IME) for certain languages. For "
"languages such as Japanese, the modern IME hosted by Text Input Host is used."
msgstr ""
"La compilación 18963 ha renombrado el teclado moderno como host de entrada "
"de texto, y además trae una versión refinada del editor de métodos de "
"entrada (IME) para ciertos idiomas. En idiomas como el japonés, se usa el "
"IME moderno alojado en el host de entrada de texto."

#: ..\python_docs\w10addoninternals.py:157
msgid ""
"When this panel opens, a menu open event is fired by the emoji panel (File "
"Explorer in build 18305 and later), an event NVDA does not detect for "
"performance reasons. As items are selected, an item selected event is fired, "
"to which NVDA responds by walking the panel in a tree-like fashion in order "
"to locate the item selected. The actual announcement of emoji characters "
"depends on synthesizers; currently, recent SAPI5 and OneCore (aka SAPI "
"Mobile) voices and Espeak nG ships with definitions of emoji characters, "
"expanded to cover other synthesizers in NVDA 2018.4"
msgstr ""
"Cuando este panel se abre, el panel de emojis dispara un evento de apertura "
"de menú (explorador de archivos en la compilación 18305 y posteriores), un "
"evento que NVDA no detecta por razones de rendimiento. Según se van "
"seleccionando elementos, se dispara un evento de elemento seleccionado, al "
"que NVDA responde recorriendo el panel como si fuera un árbol hasta ubicar "
"el elemento seleccionado. La verbalización real de caracteres emoji depende "
"de los sintetizadores; actualmente, Espeak NG y las voces recientes de Sapi "
"5 y OneCore (Sapi Mobile) vienen con definiciones de caracteres emoji, "
"expandidas para cubrir otros sintetizadores en NVDA 2018.4."

#: ..\python_docs\w10addoninternals.py:158
msgid ""
"Similar to emoji panel (or expanded input panel in build 18305 and later), "
"in build 17025 and later, modern keyboard can also provide input "
"suggestions. This is done by checking a new option in Settings/Devices/"
"Typing, and activated when one presses up arrow while typing (only United "
"States English keyboard layout is supported). Just like emoji panel, a "
"floating window appears, and in this case, one can press left or right arrow "
"to navigate between suggestions and press Enter to accept the offered item."
msgstr ""
"De manera similar al panel de emojis (o panel de entrada expandido en la "
"compilación 18305 y posteriores), en la compilación 17025 y posteriores, el "
"teclado moderno también puede proporcionar sugerencias de entrada. Esto se "
"hace marcando una nueva opción en Configuración / Dispositivos / Escritura, "
"y que se activa también al pulsar flecha arriba mientras se escribe (sólo se "
"soporta la distribución de teclado en inglés de Estados Unidos). Al igual "
"que en el panel de emojis, aparece una ventana flotante, y en este caso se "
"pueden pulsar flechas izquierda y derecha para navegar entre sugerencias y "
"pulsar intro para aceptar el elemento ofrecido."

#: ..\python_docs\w10addoninternals.py:159
msgid ""
"The above mechanism for selecting input suggestions is also employed when "
"pasting items from cloud clipboard. In build 17666 and later, one can copy "
"text and small images to the clipboard to be pasted later, and Windows will "
"keep a history of items copied to the clipboard. When Windows+V is pressed, "
"a list of clipboard items will be displayed, and one can use left or right "
"arrows to select the desired item."
msgstr ""
"El mecanismo anterior para seleccionar sugerencias de entrada también se "
"emplea al pegar elementos desde el portapapeles en la nube. En la "
"compilación 17666 y posteriores, se pueden copiar textos y pequeñas imágenes "
"al portapapeles para pegarlos más tarde. Windows conservará un historial de "
"elementos copiados al portapapeles. Al pulsar Windows+v, se mostrará una "
"lista de elementos del portapapeles, y en ella se pueden pulsar flechas "
"izquierda y derecha para seleccionar el elemento deseado."

#: ..\python_docs\w10addoninternals.py:160
msgid ""
"In NVDA 2018.3, support for all of these (modern keyboard features) plus "
"dictation window (also part of modern keyboard) have become part of NVDA. "
"The add-on is still required in order to support more recent panel redesigns "
"(see above)."
msgstr ""
"En NVDA 2018.3, el soporte para estas características (teclado moderno y "
"ventana de dictado) forma parte del propio NVDA. No obstante, el complemento "
"es necesario todavía para soportar los nuevos diseños explicados más arriba."

#: ..\python_docs\w10addoninternals.py:161
msgid "### What to announce, what not to announce"
msgstr "### Qué verbalizar, qué callar"

#: ..\python_docs\w10addoninternals.py:162
msgid ""
"It is sometimes helpful to let users know what's going on by announcing "
"various status information, while at other times it is equally important to "
"not announce extraneous messages. The former was the case for majority of "
"app modules below in the past, but since mid-2017, reverse is happening more "
"frequently."
msgstr ""
"En ocasiones es útil hacer que los usuarios sepan qué está pasando "
"anunciando información de diversos estados, mientras que otras veces es "
"igualmente importante no anunciar mensajes extra. El primero era el caso "
"para la mayoría de los siguientes módulos de aplicación en el pasado, pero "
"desde mediados de 2017 se está evolucionando precisamente hacia lo contrario."

#: ..\python_docs\w10addoninternals.py:163
msgid ""
"The app modules (and for one in particular, more than an app module) in "
"question are:"
msgstr ""
"Los módulos de aplicación (y para uno en particular, más de un módulo de "
"aplicación) en cuestión son:"

#: ..\python_docs\w10addoninternals.py:164
msgid ""
"* Calculator (calculator.py): while entering calculations, entered "
"expression will be announced via name change handler. Because this may "
"interfere with typed character announcement in NVDA, the calculator display "
"will be announced only when actual results appear or when the display is "
"cleared."
msgstr ""
"* Calculadora (calculator.py): mientras se introducen cálculos, se anuncia "
"la expresión introducida mediante el manejador de evento de cambio de "
"nombre. Como esto puede interferir con la verbalización de caracteres "
"introducidos en NVDA, sólo se verbalizará el contenido de la pantalla de la "
"calculadora cuando aparezcan los resultados reales o cuando se limpie."

#: ..\python_docs\w10addoninternals.py:165
msgid ""
"* People (peopleapp.py): NVDA will announce first suggestion when looking "
"for a contact. Unlike other search fields, there is no controller for event. "
"However, the suggestion raises item selected event."
msgstr ""
"* Personas (peopleapp.py): NVDA anunciará la primera sugerencia al buscar un "
"contacto. A diferencia de otros campos de búsqueda, no hay un controlador "
"para evento. Sin embargo, la sugerencia lanza un evento de elemento "
"seleccionado."

#: ..\python_docs\w10addoninternals.py:166
msgid ""
"* Cortana (searchui.py)/new Start menu and Windows Search experience "
"(searchapp.py): classic Cortana uses name change events and specific "
"automation ID's to convey text messages. Name change event is also employed "
"when Cortana tries to understand the text a user is dictating, which in old "
"releases of the add-on meant NVDA would announce gibberish, subsequently "
"resolved in later add-on releases. In recent Windows 10 releases, due to "
"Windows Search redesign (which also involve changing executable for Windows "
"Search to searchapp), search box content instead of result details is "
"announced, or if results are announced, they are announced twice."
msgstr ""
"* Cortana (searchui.py) / nuevo menú Inicio y experiencia de búsqueda en "
"Windows (searchapp.py): Cortana clásico usa eventos de cambio de nombre e "
"identificadores de automatización específicos para transmitir mensajes de "
"texto. El evento de cambio de nombre también se emplea cuando Cortana "
"intenta entender el texto dictado por un usuario, lo que en las versiones "
"antiguas del complemento se traducía en que NVDA podía verbalizar "
"galimatías. Esto se ha resuelto en las versiones recientes del complemento. "
"En versiones recientes de Windows 10, debido al cambio de diseño de Windows "
"Search (que también implica renombrar el ejecutable de Windows Search a "
"searchapp), se anuncia el contenido del cuadro de búsqueda en lugar de los "
"detalles del resultado, o si se anuncian los resultados, lo hacen dos veces."

#: ..\python_docs\w10addoninternals.py:167
msgid ""
"* Cortana conversations (cortana.py): similar to classic Cortana, Cortana's "
"responses are announced."
msgstr ""
"* Conversaciones de Cortana (cortana.py): similar al Cortana clásico, se "
"anuncian las respuestas de Cortana."

#: ..\python_docs\w10addoninternals.py:168
msgid ""
"* Open With (openwith.py): announces open with dialog content, used to "
"select an app when opening unknown file types."
msgstr ""

#: ..\python_docs\w10addoninternals.py:169
msgid ""
"* Settings (systemsettings.py): NVDA will announce messages such as Windows "
"Update notifications, and this is done through live region changed event "
"(name change event in older add-on releases)."
msgstr ""
"* Configuración (systemsettings.py): NVDA verbalizará mensajes tales como "
"las notificaciones de Windows Update, y esto se hace mediante el evento de "
"región viva cambiada (evento de cambio de nombre en versiones del "
"complemento más antiguas)."

#: ..\python_docs\w10addoninternals.py:170
msgid ""
"* Shell Experience Host (shellexperiencehost.py): in Action Center, toggling "
"some quick actions causes item status change event to be logged. NVDA will "
"announce the new status if appropriate."
msgstr ""
"* Host de experiencia de la shell (shellexperiencehost.py): en el centro de "
"actividades, el evento de cambio de estado del elemento se registra al "
"conmutar ciertas acciones rápidas. NVDA anunciará el nuevo estado si es "
"adecuado."

#: ..\python_docs\w10addoninternals.py:171
msgid ""
"* Microsoft Store (winstore_app.py): just like Settings app, status messages "
"are announced, this time dealing with product downloads such as apps and "
"multimedia content."
msgstr ""
"* Tienda de Microsoft (winstore_app.py): al igual que en la aplicación de "
"configuración, se verbalizan mensajes de estado, en esta ocasión "
"relacionados con la descarga de productos como aplicaciones o contenido "
"multimedia."

#: ..\python_docs\w10addoninternals.py:172
msgid "### Hunting for UIA implementation issues"
msgstr "### Cazando problemas de implementación de UIA"

#: ..\python_docs\w10addoninternals.py:173
msgid ""
"As noted above, some controls ship with odd or bad UIA implementations, and "
"universal apps are no exception (at least for app modules that ships with "
"the add-on). Because of this, the following app modules (and in case of two, "
"taken care of by Windows 10 Objects global plugin itself) include "
"workarounds for various UIA problems:"
msgstr ""
"Como se ha explicado arriba, algunos controles vienen con implementaciones "
"UIA malas o defectuosas, y las aplicaciones universales no son una excepción "
"(al menos para los módulos de aplicación que vienen en el complemento). Por "
"este motivo, los siguientes módulos de aplicación (y en dos casos, la "
"extensión global Objetos de Windows 10) incluyen soluciones para diversos "
"problemas de UIA:"

#: ..\python_docs\w10addoninternals.py:174
msgid ""
"* Calendar (hxcalendarappimm.py) and Mail (hxoutlook.py): some edit fields, "
"such as appointment title and others are shown as read-only when they are "
"not, and removing this state from states set for these controls resolved "
"this problem."
msgstr ""
"* Calendario (hxcalendarappimm.py) y Correo (hxoutlook.py): algunos cuadros "
"de edición, como el título de la cita y otros, se muestran como de sólo "
"lectura cuando en realidad no lo son, y eliminando este estado del conjunto "
"de estados para estos controles resolvía este problema."

#: ..\python_docs\w10addoninternals.py:175
msgid ""
"* Cortana: some search suggestions expose same text for name and "
"description, which results in repeats for suggestion result text. This was "
"corrected by comparing name and description and nullifying the description "
"(obj.description = None). This workaround is no longer applicable due to "
"Windows Search redesign in Version 1903. Also, when opening Sets version of "
"Cortana search box (builds 17666 and 17692), wrong controller for event is "
"fired, which prevents NvDA from announcing suggestions, and this has been "
"corrected."
msgstr ""
"* Cortana: algunas sugerencias de búsqueda exponen el mismo texto en su "
"nombre y descripción, lo que resulta en repeticiones del texto con el "
"resultado de la sugerencia. Esto fue corregido comparando nombre y "
"descripción, y anulando la descripción (obj.description=None). Este truco ya "
"no se puede aplicar por el cambio de diseño de Windows Search en la versión "
"1903. Además, al abrir la versión de Conjuntos del cuadro de búsqueda de "
"Cortana (compilaciones 17666 y 17692), se dispara el controlador de evento "
"equivocado, que evita que NVDA anuncie las sugerencias. Esto se ha corregido."

#: ..\python_docs\w10addoninternals.py:176
msgid ""
"* Maps: despite no changes to the app, live region changed event is fired by "
"map title control, so NvDA includes a way to suppress repetitions."
msgstr ""
"* Mapas: a pesar de que no hay cambios en la aplicación, el control con el "
"título del mapa dispara el evento de región viva cambiada, por lo que NVDA "
"incluye una forma de suprimir repeticiones."

#: ..\python_docs\w10addoninternals.py:177
#, fuzzy
#| msgid ""
#| "* Microsoft Edge (microsoftedge.py and microsoftedgecp.py): for some "
#| "alerts, the name of the control that fires live region changed and system "
#| "alert events have the name of \"alert\", with the actual text as the last "
#| "child or text is scattered across child elements, thus NVDA will look for "
#| "actual alert text when announcing alerts."
msgid ""
"* Microsoft Edge (microsoftedge.py and microsoftedgecp.py, legacy version): "
"for some alerts, the name of the control that fires live region changed and "
"system alert events have the name of \"alert\", with the actual text as the "
"last child or text is scattered across child elements, thus NVDA will look "
"for actual alert text when announcing alerts."
msgstr ""
"* Microsoft Edge (microsoftedge.py y microsoftedgecp.py): para algunas "
"alertas, el nombre del control que dispara los eventos de región viva "
"cambiada y alerta del sistema es \"alert\", siendo su texto real el último "
"hijo o el texto disperso por los hijos, por lo que NVDA buscará el texto "
"real al verbalizar alertas."

#: ..\python_docs\w10addoninternals.py:178
#, fuzzy
#| msgid ""
#| "* Settings and Store: for some controls (such as wehn downloading content "
#| "from Store), a specific status control fires live region changed event. "
#| "Unfortunately, the text for them are generic (for example, \"downloading "
#| "some percent\" as opposed to announcing the product one is downloading), "
#| "thus NVDA will locate information such as product names when this happens "
#| "to make this easier to follow. Also, in Settings app, some controls in "
#| "older versions of this app have no label, thus NVDA is told to look for "
#| "labels to traversing sibling (next/previous) objects, and in case of "
#| "certain Windows 10 Version 1809 installations, the correct label is the "
#| "name of the first child."
msgid ""
"* Settings and Store: for some controls (such as when downloading content "
"from Store), a specific status control fires live region changed event. "
"Unfortunately, the text for them are generic (for example, \"downloading "
"some percent\" as opposed to announcing the product one is downloading), "
"thus NVDA will locate information such as product names when this happens to "
"make this easier to follow. Also, in Settings app, some controls in older "
"versions of this app have no label, thus NVDA is told to look for labels to "
"traversing sibling (next/previous) objects, and in case of certain Windows "
"10 Version 1809 installations, the correct label is the name of the first "
"child."
msgstr ""
"* Configuración y tienda: para algunos controles (como por ejemplo al "
"descargar contenido de la tienda), un control de estado específico dispara "
"el evento de región viva cambiada. Por desgracia, su texto es genérico (por "
"ejemplo, \"descargando algo por ciento\", en lugar de verbalizar el producto "
"que se está descargando), por lo que NVDA ubicará información como los "
"nombres de producto cuando esto pase para hacer más fácil el seguimiento. "
"También, en la aplicación de configuración, algunos controles en versiones "
"más antiguas de la aplicación no tienen etiqueta, por lo que se pide a NVDA "
"que busque etiquetas viajando por los objetos hermano (siguiente / "
"anterior), y en el caso de ciertas instalaciones de la versión 1809 de "
"Windows 10, la etiqueta correcta es el nombre del primer hijo."

#: ..\python_docs\w10addoninternals.py:179
msgid ""
"* Shell Experience Host: for some submenus, NVDA does not know that it is a "
"submenu, thus worked around by teaching NVDA to recognize the proper role "
"and state for these. This procedure was limited to this app in 2018, but was "
"expanded to cover submenus in Edge app menu in August 2018."
msgstr ""
"* Host de experiencia con la Shell (shellexperiencehost.py): para algunos "
"submenús, NVDA no sabe que está en un submenú, esto se solucionó enseñándole "
"a reconocer el rol y estado adecuados para ellos. Este procedimiento se "
"limitó a esta aplicación en 2018, pero se expandió para cubrir los submenús "
"en el menú de aplicación de Edge en agosto del 2018."

#: ..\python_docs\w10addoninternals.py:180
msgid "### A tale on app module and executable names"
msgstr "### Un cuento sobre los nombres de ejecutables y módulos de aplicación"

#: ..\python_docs\w10addoninternals.py:181
msgid ""
"One of the side-effects of continuous delivery is appearance of "
"unanticipated changes. This is more so when a workaround for an app broke "
"simply because the name of the executable or the app has changed. In "
"addition, some apps shipped with an executable whose name broke Python's "
"module name and import routines."
msgstr ""
"Uno de los efectos colaterales de la entrega continua es la aparición de "
"cambios no previstos con antelación. Este efecto es más notable cuando una "
"solución para una aplicación se rompe simplemente porque el nombre del "
"ejecutable o la aplicación ha cambiado. Además, algunas aplicaciones "
"vinieron con un ejecutable cuyo nombre rompía los nombres de módulo de "
"Python y los procedimientos de importación."

#: ..\python_docs\w10addoninternals.py:182
msgid "The specific issues encountered were:"
msgstr "Los problemas específicos que se encontraron fueron:"

#: ..\python_docs\w10addoninternals.py:183
msgid ""
"* Mail, Maps, Modern Keyboard, Start menu and Store: executable names have "
"changed throughout Windows 10 development. For example, in May 2017, "
"workarounds in place for Mail app broke when Microsoft renamed hxmail to "
"hxoutlook, and in July 2019, Modern Keyboard was renamed to textinputhost. "
"Microsoft Edge is a special case of this because it requires use of two app "
"modules: microsoftedge.exe for web browser management, and microsoftedgecp."
"exe (content process) for displaying content in a more secure way. Due to "
"this, aliasing (a new app module importing everything from an old version) "
"is common."
msgstr ""
"* Correo, mapas, teclado moderno, menú Inicio y tienda: los nombres de los "
"ejecutables han cambiado a lo largo del desarrollo de Windows 10. Por "
"ejemplo, en mayo de 2017, las soluciones para la aplicación de correo se "
"rompieron cuando Microsoft cambió el nombre de hxmail a hxoutlook, y en "
"julio de 2019, el teclado moderno se renombró a textinputhost. Microsoft "
"Edge es un caso especial, ya que necesita que se usen dos módulos de "
"aplicación: microsoftedge.exe para la administración del explorador web, y "
"microsoftedgecp.exe (proceso de contenido) para mostrar el contenido de una "
"forma más segura. Por este motivo, es común la creación de alias (un módulo "
"de aplicación que importa todo lo de otro módulo)."

#: ..\python_docs\w10addoninternals.py:184
msgid ""
"* MSN Weather, Store, modern keyboard and others: some executable names have "
"a dot (.) in the middle, which breaks app module import routines. This is "
"countered by replacing dots with underscores (_). For example, for Skype, "
"the actual executable name is skype.app.exe, while the app module for this "
"app is named skype_app.py. This fix is now part of recent NVDA releases."
msgstr ""
"* El tiempo, tienda, teclado moderno y otros: algunos nombres de ejecutable "
"tienen un punto (.) a la mitad, que rompe los procedimientos de importación "
"de módulos. Esto se soluciona reemplazando puntos por guiones bajos (_). Por "
"ejemplo, para Skype, el auténtico nombre del ejecutable es Skype.app.exe, "
"mientras que su módulo de aplicación se llama Skype_app.py. Esta solución ya "
"forma parte de las últimas versiones de NVDA."

#: ..\python_docs\w10addoninternals.py:185
msgid "## Few remarks"
msgstr "## Unas pocas notas"

#: ..\python_docs\w10addoninternals.py:186
msgid "### UIA performance"
msgstr "### Rendimiento de UIA"

#: ..\python_docs\w10addoninternals.py:187
msgid ""
"Numerous issues were filed on NVDA's GitHub page regarding UIA performnace "
"issues. These include issues in early days of Edge support where navigating "
"the document was slow (resolved in NVDA 2017.2), list view issues in File "
"Explorer while using a program with high CPU usage (GoldWave, for example, "
"resolved in NVDA 2018.4) and so on. While some are specific to NVDA, others "
"are reproducible while using Narrator, hence NV Access and Microsoft are "
"actively collaborating on identifying and writing fixes for performance and "
"control implementation problems (such as some of the ones listed above)."
msgstr ""
"En la página de GitHub de NVDA se crearon bastantes incidencias relacionadas "
"con problemas de rendimiento de UIA. Aquí se incluyen incidencias de los "
"primeros días en los que se daba soporte a Edge en las que se decía que la "
"navegación por el documento era lenta (resueltas en NVDA 2017.2), problemas "
"en la vista de lista del explorador de archivos mientras se usaba un "
"programa que consumía mucha CPU (GoldWave, por ejemplo, resuelto en NVDA "
"2018.4) y así sucesivamente. Mientras que algunos son específicos de NVDA, "
"otros pueden reproducirse mientras se usa el narrador, por lo que NV Access "
"y Microsoft están colaborando activamente para identificar y escribir "
"correcciones para problemas de rendimiento e implementación de controles "
"(como los que se han listado arriba)."

#: ..\python_docs\w10addoninternals.py:188
msgid ""
"### Narrator is the new reference in screen reading in Windows 10 and "
"universal apps"
msgstr ""
"### Narrador es la nueva referencia en lectura de pantalla en Windows 10 y "
"las aplicaciones universales"

#: ..\python_docs\w10addoninternals.py:189
msgid ""
"Until a few years ago, any screen reader wishing to support an app or add "
"features would look up to JAWS for Windows for guidance. This is no longer "
"the case with Windows 10 and universal apps, as Narrator provides a useful "
"yardstick (at least a base implementation other screen reader vendors should "
"respond to) when it comes to reading text on screen, feature set for "
"supporting universal apps, and investigate UIA issues. Some of the features "
"discussed above, such as search suggestion notification, were inspired by "
"Narrator's handling of various UIA events, and because Narrator reads what "
"is told to read, NVDA ships with workarounds for odd UIA implementations to "
"get around some poblems."
msgstr ""
"Hasta hace unos pocos años, cualquier lector de pantalla que quisiera dar "
"soporte a una aplicación o añadir nuevas funciones utilizaba Jaws for "
"Windows como guía. Ese ya no es el caso para Windows 10 y las aplicaciones "
"universales, ya que Narrador proporciona un punto de referencia útil (al "
"menos una implementación base a la que otros fabricantes de lectores de "
"pantalla deberían responder) al leer texto en pantalla, un conjunto de "
"características para dar soporte a las aplicaciones universales, e "
"investigar problemas de UIA. Algunas de las características expuestas "
"arriba, como la notificación de sugerencias de búsqueda, estuvieron "
"inspiradas en la forma que tiene Narrador de manejar diversos eventos de "
"UIA, y gracias a que Narrador lee lo que hay que leer, NVDA viene con "
"soluciones para implementaciones UIA defectuosas para hacer frente a algunos "
"problemas."

#: ..\python_docs\w10addoninternals.py:190
msgid "### Integrating features from this add-on to NVDA screen reader"
msgstr ""
"### Integración de características de este complemento en el lector de "
"pantalla NVDA"

#: ..\python_docs\w10addoninternals.py:191
msgid ""
"As noted above, some add-on features are being (or have been) integrated "
"into NVDA. These include search suggestion notification, modern keyboard "
"support, live region changed event tracking and announcement and so on."
msgstr ""
"Como se ha explicado arriba, algunas funciones del complemento se están (o "
"se han) integrando en NVDA. Aquí se incluyen la notificación de sugerencias "
"de búsqueda, soporte del teclado moderno, rastreo y verbalización del evento "
"de región viva cambiada y así sucesivamente."

#: ..\python_docs\w10addoninternals.py:192
msgid ""
"Typically, when a feature from an add-on is integrated into NVDA, it goes "
"through a typical issue-review-test-documentation cycle. To illustrate this, "
"let us go through steps involved in getting search suggestions into NVDA:"
msgstr ""
"Normalmente, cuando se integra la función de un complemento en NVDA, sigue "
"el típico ciclo de incidencia-revisión-pruebas-documentación. Para "
"ilustrarlo, vayamos por los pasos implicados en la integración de "
"sugerencias de búsqueda en NVDA:"

#: ..\python_docs\w10addoninternals.py:193
msgid "1. Issue: an issue regarding search suggestions was filed in 2016."
msgstr ""
"1. Incidencia: se creó una incidencia relacionada con las sugerencias de "
"búsqueda en 2016."

#: ..\python_docs\w10addoninternals.py:194
msgid ""
"2. Review: I and NV Access went through a review phase where implementation "
"detail were discussed and test cases written."
msgstr ""
"2. Revisión: NV Access y yo iniciamos una fase de revisión donde se "
"discutieron detalles de implementación y se escribieron casos de prueba."

#: ..\python_docs\w10addoninternals.py:195
msgid ""
"3. Test: in 2017, search suggestion feature made its debut in an NVDA next "
"snapshod. This resulted in feedback from users regarding braille support, "
"sounds and others. After several weeks, this feature was made available to "
"master snapshot users, thus ready for NVDA 2017.3."
msgstr ""
"3. Prueba: en 2017, se estrenó la función de sugerencias de búsqueda en la "
"versión next de desarrollo de NVDA. Esto dio como resultado "
"retroalimentación de los usuarios relacionada con el soporte Braille, "
"sonidos y otros. Después de varias semanas, esta característica se puso a "
"disposición de los usuarios de la versión de desarrollo master, y por tanto "
"estuvo lista para NVDA 2017.3."

#: ..\python_docs\w10addoninternals.py:196
msgid ""
"4. Documentation: the search suggestion feature was documented in the user "
"guide. Discussion of this feature in this article is a special case of "
"documentation step."
msgstr ""
"4. Documentación: la característica de sugerencias de búsqueda se documentó "
"en la guía de usuario. La exposición de esta función en este artículo es un "
"caso especial del paso de documentación."

#: ..\python_docs\w10addoninternals.py:197
msgid ""
"Due to changes to release process in 2018, testing occurs via pull requests."
msgstr ""
"Debido a los cambios del proceso de liberación en 2018, las pruebas se hacen "
"mediante solicitudes de cambio."

#: ..\python_docs\w10addoninternals.py:198
msgid ""
"In addition, when a feature from an add-on is under consideration for "
"inclusion in NVDA, I modify the add-on source code to make it compliant with "
"NVDA source code guidelines, such as commenting style, copyright header and "
"so on."
msgstr ""
"Además, cuando se considera que se puede incluir en NVDA alguna función de "
"un complemento, modifico el código fuente del complemento para que cumpla "
"las pautas del código fuente de NVDA, como el estilo de comentarios, "
"cabecera de copyright y así sucesivamente."

#: ..\python_docs\w10addoninternals.py:199
msgid "### Giving feedback to app developers"
msgstr "### Cómo dar retroalimentación a los desarrolladores de aplicaciones"

#: ..\python_docs\w10addoninternals.py:200
msgid ""
"Feedback drives Windows 10 and universal apps. one of the reasons for "
"instituting Windows Insider Program, as noted by Microsoft and others, is to "
"gather feedback from millions of users in hopes of making Windows 10 better "
"in the long run. As such, sending feedback regarding Windows 10 and "
"preinstalled universal apps, as well as third-party apps is crucial at the "
"age of feedback-driven development."
msgstr ""
"La retroalimentación dirige a Windows 10 y las aplicaciones universales. Una "
"de las razones para crear el programa Windows Insider, como han indicado "
"Microsoft y otros, es recopilar comentarios de millones de usuarios, con la "
"esperanza de hacer Windows 10 mejor a largo plazo. Por tanto, enviar "
"retroalimentación sobre Windows 10 y las aplicaciones universales "
"preinstaladas, así como de las aplicaciones de terceros, es crucial en la "
"era del desarrollo dirigido por comentarios."

#: ..\python_docs\w10addoninternals.py:201
msgid "Here are some tips regarding sending feedback to app writers:"
msgstr ""
"Aquí hay algunos consejos que se pueden poner en práctica a la hora de "
"enviar comentarios a los desarrolladores de aplicaciones:"

#: ..\python_docs\w10addoninternals.py:202
msgid ""
"1. Embrace: have willingness to embrace (use and test) the app in question."
msgstr ""
"1. Compromiso: ten la disposición para comprometerte a usar y probar la "
"aplicación en cuestión."

#: ..\python_docs\w10addoninternals.py:203
msgid ""
"2. Document: if something happens, document what happened, steps to "
"reproduce, and possible workarounds."
msgstr ""
"2. Documenta: si algo pasa, documenta qué ha pasado, pasos para "
"reproducirlo, y posibles soluciones."

#: ..\python_docs\w10addoninternals.py:204
msgid ""
"3. Send: send feedback to developers (Feedback Hub, contacting developers of "
"third-party universal apps, screen reader vendors and so on)."
msgstr ""
"3. Envía: envía tu retroalimentación a los desarrolladores (centro de "
"comentarios, contacto con desarrolladores de aplicaciones universales de "
"terceros, fabricantes de lectores de pantalla, etc.)."

#: ..\python_docs\w10addoninternals.py:205
msgid ""
"4. Follow-up: follow-up with developers if they have questions for you or "
"you want to know what's going on with your feedback."
msgstr ""
"4. Seguimiento: seguimiento con los desarrolladores para ver si tienen "
"preguntas para ti o para saber qué ocurre con tu retroalimentación."

#: ..\python_docs\w10addoninternals.py:206
msgid "### Accessibility best practices for universal apps"
msgstr "### Buenas prácticas de accesibilidad para aplicaciones universales"

#: ..\python_docs\w10addoninternals.py:207
msgid ""
"As a Windows Insider, a screen reader contributor and the author of a screen "
"reader add-on for Windows 10 and universal apps, I came across numerous "
"examples where apps were inaccessible at first, or usability was "
"overshadowed by issues when working with controls, navigation and so on."
msgstr ""
"Como Windows insider, contribuyente con un lector de pantalla y autor de un "
"complemento para Windows 10 y las aplicaciones universales, me he encontrado "
"numerosos ejemplos donde las aplicaciones eran inaccesibles al principio, o "
"su usabilidad se veía ensombrecida por problemas al trabajar con los "
"controles, la navegación y así sucesivamente."

#: ..\python_docs\w10addoninternals.py:208
msgid ""
"Here are some tips in hopes of making universal apps truly universally "
"accessible and usable:"
msgstr ""
"Aquí hay algunos consejos que espero sirvan para hacer las aplicaciones "
"universales verdaderamente accesibles y usables:"

#: ..\python_docs\w10addoninternals.py:209
msgid ""
"* Listen to feedback, especially feedback coming from users with "
"disabilities such as screen reader users."
msgstr ""
"* Escucha la retroalimentación, especialmente los comentarios que vengan de "
"usuarios con discapacidad, como por ejemplo usuarios de lectores de pantalla."

#: ..\python_docs\w10addoninternals.py:210
msgid ""
"* Do not put accessibility as an afterthought, nor something you want to "
"work in the future (say, version 3). Proactive accessibility and "
"investigations into issues is something app developers should learn as they "
"develop apps."
msgstr ""
"* No pongas la accesibilidad como un pensamiento de último momento, ni como "
"algo que quieras dejar para trabajar en el futuro (digamos, versión 3). La "
"investigación proactiva de la accesibilidad y sus problemas es algo que los "
"desarrolladores de aplicaciones deberían aprender según las desarrollan."

#: ..\python_docs\w10addoninternals.py:211
msgid ""
"* Test with screen readers and other assistive technologies: one way to "
"validate accessibility issues raised by users with disabilities is using "
"assistive technologies in real life. Use facilities offered by screen "
"readers such as Python console in NVDA, developer mode in Narator and so on "
"in hopes of locating where the root of the issue lies."
msgstr ""
"* Haz pruebas con lectores de pantalla y otras ayudas técnicas: una forma de "
"validar problemas de accesibilidad reportados por usuarios con discapacidad "
"es usar las ayudas técnicas en la vida real. Usa las herramientas ofrecidas "
"por los lectores de pantalla, como la consola Python de NVDA, el modo "
"desarrollador en Narrador, etc. para localizar dónde se encuentra la raíz "
"del problema."

#: ..\python_docs\w10addoninternals.py:212
msgid ""
"* Try using keyboards and other input methods offered by various assistive "
"technologies: touchscreen isn't the only input method used in universal "
"apps. Many screen reader users use a keyboard to interact with apps, and "
"some use touchscreen gestures offered by screen readers to navigate an app "
"and respond to changes. Try using them to make sure app features are working "
"as advertised when using keyboards and other input methods."
msgstr ""
"* Intenta usar teclados y otros métodos de entrada ofrecidos por diversas "
"ayudas técnicas: la pantalla táctil no es el único método de entrada usado "
"en las aplicaciones universales. Muchos usuarios de lectores de pantalla "
"usan un teclado para interactuar con aplicaciones, y otros usan gestos en "
"sus pantallas táctiles ofrecidos por los lectores de pantalla para navegar "
"por la aplicación y reaccionar a los cambios. Intenta usarlos para "
"asegurarte de que las funciones de la aplicación funcionan como se espera al "
"utilizar teclados y otros métodos de entrada."

#: ..\python_docs\w10addoninternals.py:213
msgid ""
"* Use useful labels: in case the control has no label as reported by screen "
"readers, be sure to provide labels. A good historical case is Windows "
"Defender Security Center where there was no label for various buttons in "
"2016, which was fixed in 2017 with Creators Update. Also, avoid generic XAML "
"labels such as someclass.someotherclass.such (especialy lists and list "
"items), as it does not provide an accurate picture as to where one is "
"located. A classic case is Feedback Hub app where generic labels for lists "
"were presnet in older versions, subsequently fixed in recent updates."
msgstr ""
"* Usa etiquetas útiles: en caso de que el lector de pantalla te informe de "
"que tu control no tiene etiqueta, asegúrate de ofrecerla. Un buen caso "
"histórico es el centro de seguridad de Windows Defender, donde no había "
"etiquetas para diversos botones en 2016, y que se solucionó en 2017 con la "
"actualización Creators. Además, evita etiquetas XAML genéricas, como clase."
"otraclase.algo (especialmente en listas y elementos de lista), ya que no "
"proporcionan un cuadro preciso que permita conocer al usuario su ubicación. "
"Un caso clásico es la aplicación del centro de comentarios, donde las "
"etiquetas genéricas para listas estaban presentes en las versiones más "
"antiguas, problema que se ha solucionado en las actualizaciones más "
"recientes."

#: ..\python_docs\w10addoninternals.py:214
msgid ""
"* Raise appropriate UIA events: screen readers listen to UIA events to "
"detect what's happening with apps. For example, if there's a need to anounce "
"suggestions, controller for event should be fired. An example is Store where "
"old releases did not raise controller for event when content suggestions "
"appeared, with recent versions raising this event."
msgstr ""
"* Lanza eventos UIA apropiados: los lectores de pantalla escuchan los "
"eventos UIA para detectar qué está ocurriendo con las aplicaciones. Por "
"ejemplo, si existe la necesidad de verbalizar sugerencias, debería "
"dispararse el evento controlador para. Un ejemplo es la tienda, donde las "
"antiguas versiones no disparaban el evento controlador para cuando aparecían "
"las sugerencias de contenido. Las versiones más recientes ya lanzan este "
"evento."

#: ..\python_docs\w10addoninternals.py:215
msgid "## Conclusion"
msgstr "## Conclusión"

#: ..\python_docs\w10addoninternals.py:216
msgid ""
"With the introduction of Windows 10 and Universal Windows Platform, a new "
"way of connecting users and developers has emerged: feedback-driven "
"development. This allows users to send feedback regarding features and bugs, "
"including that of accessibility feedback. Although accessibility of Windows "
"10 and universal apps were spotty at first, this situation is improving, "
"driven by Microsoft's commitment to accessibility, continued feedback, and "
"collaboration between Microsoft and assistive technology vendors."
msgstr ""
"Con la introducción de Windows 10 y la plataforma Windows Universal ha "
"emergido una nueva forma de conectar a usuarios y desarrolladores: "
"desarrollo dirigido por retroalimentación. Esto permite a los usuarios "
"enviar retroalimentación relacionada con características y fallos, "
"incluyendo los de accesibilidad. Aunque la accesibilidad de Windows 10 y las "
"aplicaciones universales era irregular al principio, esta situación está "
"mejorando, dirigida por el compromiso de Microsoft hacia la accesibilidad, "
"la retroalimentación continuada, y la colaboración entre Microsoft y los "
"fabricantes de ayudas técnicas."

#: ..\python_docs\w10addoninternals.py:217
msgid ""
"In terms of NVDA, what made Windows 10 usability possible was not only "
"changes made from within Windows and universal apps, but also proactive "
"investigations into making sure NVDA users have a great time with Windows "
"10. Windows 10 App Essentials add-on is part of that work, as discussed "
"throughout this article when talking about UIA workarounds, improving "
"support for apps and controls and others. But there are limits as to what "
"the add-on can do, as the other puzzle pieces are willingness from "
"developers (especially third-party UWP developers) to embrace accessibility "
"as a pillar in their apps, and willingness from users to send accessibility "
"feedback. Although some add-on features are being integrated into NVDA, "
"there are some areas where the add-on is needed (especially when supporting "
"features introduced in Windows Insider Preview builds), and until the day "
"accessibility is everywhere in Windows 10 ecosystem and universal apps, the "
"add-on will still be here."
msgstr ""
"Ya centrándonos en NVDA, lo que hizo posible la usabilidad de Windows 10 no "
"fueron solamente los cambios introducidos en Windows y las aplicaciones "
"universales, sino también la investigación proactiva para asegurarse de que "
"los usuarios de NVDA disfrutan de una experiencia fantástica con Windows 10. "
"El complemento Windows 10 App Essentials es parte de ese trabajo, como se ha "
"expuesto en este artículo al hablar sobre las soluciones de UIA, el soporte "
"mejorado de aplicaciones, controles y demás. Sin embargo, hay límites que el "
"complemento no puede superar, y las otras piezas del puzle deben ponerlas "
"los desarrolladores (especialmente los desarrolladores UWP de aplicaciones "
"de terceros) para establecer la accesibilidad como un pilar en sus "
"desarrollos, y los usuarios que envían retroalimentación sobre "
"accesibilidad. Aunque algunas funciones del complemento se están integrando "
"en NVDA, hay algunas áreas donde el complemento es necesario (especialmente "
"al introducir funciones nuevas en las compilaciones de Windows Insider "
"Preview), y mientras no llegue el día en que la accesibilidad esté en todas "
"partes en el ecosistema de Windows 10 y las aplicaciones universales, el "
"complemento seguirá aquí."

#: ..\python_docs\w10addoninternals.py:218
msgid "## References"
msgstr "## Referencias"

#: ..\python_docs\w10addoninternals.py:219
msgid "* Windows 10 (Wikipedia): https://en.wikipedia.org/wiki/Windows_10"
msgstr "* Windows 10 (Wikipedia): https://en.wikipedia.org/wiki/Windows_10"

#: ..\python_docs\w10addoninternals.py:220
msgid "* Windows Insider Program (Microsoft): https://insider.windows.com/"
msgstr "* Windows Insider Program (Microsoft): https://insider.windows.com/"

#: ..\python_docs\w10addoninternals.py:221
msgid ""
"* Windows as a Service Overview (Microsoft Docs): https://docs.microsoft.com/"
"en-us/windows/deployment/update/waas-overview"
msgstr ""
"* Descripción de Windows como servicio (Microsoft Docs): https://docs."
"microsoft.com/en-us/windows/deployment/update/waas-overview"

#: ..\python_docs\w10addoninternals.py:222
msgid ""
"* What's a Universal Windows Platform (UWP) App (Microsoft UWP App "
"Developer): https://docs.microsoft.com/en-us/windows/uwp/get-started/whats-a-"
"uwp"
msgstr ""
"* Qué es una aplicación de la plataforma de Windows universal (UWP) "
"(desarrollador de aplicaciones Microsoft UWP): https://docs.microsoft.com/en-"
"us/windows/uwp/get-started/whats-a-uwp"

#: ..\python_docs\w10addoninternals.py:223
msgid ""
"* UI Automation Overview (MSDN): https://msdn.microsoft.com/en-us/library/"
"windows/desktop/ee684076(v=vs.85).aspx"
msgstr ""
"* Descripción de UI Automation (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ee684076(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:224
msgid ""
"* MSAA overview (MSDN): https://msdn.microsoft.com/en-us/library/windows/"
"desktop/dd373592(v=vs.85).aspx"
msgstr ""
"* Descripción de MSAA (MSDN): https://msdn.microsoft.com/en-us/library/"
"windows/desktop/dd373592(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:225
msgid ""
"* UI Automation and Active Accessibility (MSDN): https://msdn.microsoft.com/"
"en-us/library/windows/desktop/ee671585(v=vs.85).aspx"
msgstr ""
"* UI Automation y Active Accessibility (MSDN): https://msdn.microsoft.com/en-"
"us/library/windows/desktop/ee671585(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:226
msgid ""
"* Component Object Model Overview (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ms680573(v=vs.85).aspx"
msgstr ""
"* Descripción de Component Object Model (MSDN): https://msdn.microsoft.com/"
"en-us/library/windows/desktop/ms680573(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:227
msgid ""
"* IUIAutomationElement interface (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ee671425(v=vs.85).aspx"
msgstr ""
"* La interfaz IUIAutomationElement (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ee671425(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:228
msgid ""
"* cachedAutomationId (MSDN): https://msdn.microsoft.com/en-us/library/"
"windows/desktop/ee671434(v=vs.85).aspx"
msgstr ""
"* cachedAutomationId (MSDN): https://msdn.microsoft.com/en-us/library/"
"windows/desktop/ee671434(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:229
msgid ""
"* UI Automation Properties Overview (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ee671594(v=vs.85).aspx"
msgstr ""
"* Descripción de las propiedades de UI Automation (MSDN): https://msdn."
"microsoft.com/en-us/library/windows/desktop/ee671594(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:230
msgid ""
"* UI Automation Events Overview (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ee671221(v=vs.85).aspx"
msgstr ""
"* Descripción de los eventos de UI Automation (MSDN): https://msdn.microsoft."
"com/en-us/library/windows/desktop/ee671221(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:231
msgid ""
"* UI Automation Event Identifiers (MSDN): https://msdn.microsoft.com/en-us/"
"library/windows/desktop/ee671223(v=vs.85).aspx"
msgstr ""
"* Identificadores de eventos en UI Automation (MSDN): https://msdn.microsoft."
"com/en-us/library/windows/desktop/ee671223(v=vs.85).aspx"

#: ..\python_docs\w10addoninternals.py:232
msgid ""
"* Auto-suggest accessibility, part of Accessible Text Requirements "
"(Microsoft Docs): https://docs.microsoft.com/en-us/windows/uwp/accessibility/"
"accessible-text-requirements"
msgstr ""
"* Accesibilidad de sugerencias automáticas, parte de los requisitos de "
"textos accesibles (Microsoft Docs): https://docs.microsoft.com/en-us/windows/"
"uwp/accessibility/accessible-text-requirements"

#: ..\python_docs\w10addoninternals.py:233
msgid ""
"* IUIAutomationNotificationEventHandler::HandleNotificationEvent (MSDN): "
"https://msdn.microsoft.com/en-us/library/windows/desktop/mt814955(v=vs.85)."
"aspx"
msgstr ""
"* IUIAutomationNotificationEventHandler::HandleNotificationEvent (MSDN): "
"https://msdn.microsoft.com/en-us/library/windows/desktop/mt814955(v=vs.85)."
"aspx"
