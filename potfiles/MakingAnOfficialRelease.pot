# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-16 12:08+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\python_docs\MakingAnOfficialRelease.py:3
msgid "# Making an Official Release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:4
msgid ""
"The following instructions are for the release manager and detail how to "
"make an official release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:5
msgid ""
"See [the release process](https://github.com/nvaccess/nvda/wiki/"
"ReleaseProcess) for details on timing."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:6
msgid "## Beta release (pre-release)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:7
msgid "* Decide which commit to start the beta from."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:8
msgid ""
"  - This will be the branch off point for the new release. Prior to this "
"(but after the previous \"final\" release) master can be merged into beta at "
"any point. After the branch of point master will move on and PR's required "
"in this release should target the beta branch."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:9
msgid ""
"  - Generally master should be healthy (all checks passing and no known "
"regressions)."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:10
msgid ""
"  - In the past, the commit chosen should ensure that the most recent "
"(significant) change should have had at least one week of alpha testing. "
"This restriction has been relaxed somewhat to speed up the beta process. "
"Lead developers should use their discretion to choose an appropriate "
"branching point. If necessary, changes can be reverted or new changes added "
"to the beta to address issues."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:11
msgid ""
"* Create a branch from this commit, create a PR from this branch targeting "
"beta"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:12
msgid ""
"  - This allows for others to review the selected commit, and what will be "
"included in the release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:13
msgid "  - It makes reviewing the changes file easier."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:14
msgid "  - Do a review of the `user_docs/en/changes.t2t` file."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:15
msgid ""
"  - Ask for a second review, use the PR and add a link to the diff for the "
"changes file since the diff will be quite large."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:16
msgid "  - Once all approved merge to beta."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:17
msgid "* Create a [new annotated tag](#create-the-release--annotated-tag)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:18
msgid ""
"  - A beta doesn't need a pre-release entry on GitHub. Save that for RC and "
"releases"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:19
#: ..\python_docs\MakingAnOfficialRelease.py:64
#: ..\python_docs\MakingAnOfficialRelease.py:71
msgid ""
"* Wait for the [`appVeyor` build](https://ci.appveyor.com/project/nvaccess/"
"nvda/history) to complete."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:20
#: ..\python_docs\MakingAnOfficialRelease.py:65
#: ..\python_docs\MakingAnOfficialRelease.py:72
msgid "* [Scan the launcher executable](#scan-the-build)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:21
#: ..\python_docs\MakingAnOfficialRelease.py:66
#: ..\python_docs\MakingAnOfficialRelease.py:73
msgid "* [Publish the staged release](#publish-the-staged-release)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:22
#: ..\python_docs\MakingAnOfficialRelease.py:67
#: ..\python_docs\MakingAnOfficialRelease.py:74
msgid "* [Publicize the release.](#publicize-the-release)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:23
msgid "* [Update auto milestone ID](#update-auto-milestone-id)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:24
msgid "* [Update NVDA version in `master`](#update-nvda-version-in-master)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:25
msgid "### During the Beta period"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:26
msgid ""
"* Periodically look at recent issues filed, specifically looking for those "
"with `p1`, `bug/crash` or `bug/app-crash` labels."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:27
msgid ""
"* Periodically look for PRs based on beta and ensure they are reviewed then "
"merged or rejected."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:28
msgid ""
"  - As PRs based on the beta branch are merged, periodically tag further "
"betas."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:29
msgid "## Translation Freeze"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:30
msgid "* End of Beta period, after the final beta."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:31
msgid ""
"* [Call a translation freeze](https://github.com/nvaccess/nvda/wiki/"
"StartingTranslationFreeze) for 2 weeks."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:32
msgid "  - No more commits should be made to the beta branch at this time."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:33
msgid "### Second translation freeze"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:34
msgid ""
"Normally not required, however, occasionally to fix a critical issue "
"requires changes to the translation strings after the translation freeze has "
"started/completed then:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:35
msgid "* Ensure `beta` has the changes requiring re-translation."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:36
msgid "* Re complete the steps in calling a translation freeze."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:37
msgid ""
"* Send an email to the translation mailing list describing the need for new "
"changes and deadline."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:38
msgid "## Release candidates (pre-release)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:39
msgid "* Ensure it is safe to release an RC."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:40
msgid ""
"  - Looking at recent issues filed, specifically looking for those with "
"`p1`, `bug/crash` or `bug/app-crash` labels."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:41
msgid "* Check for PRs against `beta`."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:42
msgid ""
"  - Use [search on PR page `is:pr is:open base:beta`](https://github.com/"
"nvaccess/nvda/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+base%3Abeta)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:43
msgid ""
"  - Look for any PRs based on `beta`, and review and approve/merge or reject "
"them."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:44
msgid ""
"* Check for PRs against `rc`, this is more likely after the first RC release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:45
msgid ""
"  - Use [search on PR page `is:pr is:open base:rc`](https://github.com/"
"nvaccess/nvda/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+base%3Arc)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:46
msgid ""
"  - Look for any PRs based on `rc`, and review and approve/merge or reject "
"them."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:47
msgid "* If this is `RC1`, update translations:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:48
msgid "    1. Log into `exbi`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:49
msgid "    1. Switch user to nvdal10n: `sudo su nvdal10n`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:50
msgid "    1. `cd ~/mr/mainNVDACode`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:51
#: ..\python_docs\MakingAnOfficialRelease.py:53
msgid "    1. `mr up`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:52
msgid "    1. `cd ../srt`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:54
msgid "    1. `mr svn2nvda` **Note:**"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:55
msgid "        - This may take a few minutes"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:56
msgid "        - Watch for errors such as `unable to push`."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:57
msgid "    1. `exit` To return to your own user."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:58
msgid "    - **Note:** This updates `beta` with the new translations."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:59
msgid "* Locally, update the `rc` branch and push to GitHub"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:60
msgid "  - For RC1, reset the `rc` branch to `beta`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:61
msgid "  - For RC1+, merge `beta` to `rc`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:62
#: ..\python_docs\MakingAnOfficialRelease.py:69
msgid "* Create a [annotated tag](#create-the-release--annotated-tag)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:63
msgid ""
"* Create a [new pre-release on GitHub](#convert-annotated-tag-into-a-gitHub-"
"release)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:68
msgid "## Final release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:70
msgid ""
"* Create a [new release on GitHub](#convert-annotated-tag-into-a-gitHub-"
"release)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:75
msgid ""
"* Close the release [milestone](https://github.com/nvaccess/nvda/milestones)."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:76
msgid "## Create the release / annotated tag"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:77
msgid "* Checkout the version to release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:78
msgid "  - `git fetch`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:79
msgid "  - `git checkout origin/<branch>`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:80
msgid "  - Where `<branch>` is:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:81
msgid "    - For a beta: `beta`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:82
msgid "    - For an RC: `rc`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:83
msgid "    - For a release: `rc`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:84
msgid "* Create a new annotated tag in git, and push to GitHub."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:85
msgid "  - Create tag: `git tag -a <tag name> -m \"<message>\"`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:86
msgid "    - The tag must have a `release-` prefix. EG:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:87
msgid "      - Beta: `release-2019.2beta3`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:88
msgid "      - RC: `release-2019.2rc1`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:89
msgid "      - Release: `release-2019.2`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:90
msgid ""
"    - The first line of the message should contain the name of the release. "
"EG:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:91
msgid "      - Beta: `Release 2019.2beta3`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:92
msgid "      - RC: `Release 2019.2rc1`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:93
msgid "      - Release: `Release 2019.2`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:94
msgid ""
"    - The message may contain extra information (after a blank line) "
"relevant to this specific release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:95
msgid "  - Push to GitHub: `git push origin <tag name>`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:96
msgid ""
"  - Tagging the release triggers a build on `appveyor` automatically, as "
"part of this the release will be staged."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:97
msgid ""
"  - The release will now show up on the snapshots page (under `beta` or `RC`)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:98
msgid ""
"  - Auto update system will start offering it to those checking for betas"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:99
msgid "## Convert annotated tag into a GitHub release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:100
msgid ""
"- Visit the [GitHub new release page](https://github.com/nvaccess/nvda/tags)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:101
msgid ""
"- Click on the tag menu button, shown as \"...\" and choose \"Create Release"
"\""
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:102
msgid "- Release Title example: `Release 2019.2beta3`, "
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:103
msgid "- No description necessary for first RC / Release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:104
msgid ""
"  - Subsequent RC / Release can describe important additions & removals."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:105
msgid "- For `RC`, ensure option \"This is a pre-release\" is checked."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:106
msgid "### Reasoning"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:107
msgid ""
"GitHub \"releases\" are formatted differently, can include metadata such as "
"'pre-release' and can have binaries attached. In the future, we would like "
"to move to a more automated system that creates this release from the "
"appveyor script and attaches the binaries. Unfortunately GitHub releases "
"don't create an \"annotated tag\" in git, as such the tag for the release "
"does not have a date or message."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:108
msgid "## Scan the build"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:109
msgid "- Use [VirusTotal](http://www.virustotal.com/)."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:110
msgid "- Just submit the artifact download URL from `appveyor`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:111
msgid ""
"- Recently, using the appveyor URL has resulted in 1 (\"CRDF) of the 72 "
"scanners reporting an issue."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:112
msgid ""
"- Follow up by scanning with the NV Access URL, which the \"CRDF\" scanner "
"does not flag as an issue."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:113
msgid "## Publish the staged release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:114
msgid "- Connect to `exbi`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:115
msgid "- Switch user to nvaccess: `sudo su nvaccess`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:116
msgid "- Run `nvdaRelease`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:117
msgid "  - This will confirm the file currently staged."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:118
msgid "  "
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:119
msgid "## Publicize the release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:120
msgid "- Add a blog post on  www.nvaccess.org"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:121
msgid "  - Use a previous blog post as a base."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:122
msgid ""
"  - Use a link to the file on NVAccess.org, appveyor build artifacts expire "
"after 6 months."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:123
msgid "  - **For RC and Beta:** Put post in the `Development` category."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:124
msgid ""
"    - Excluding the first pre-release, include a list of changes since the "
"last pre-release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:125
msgid "  - **For Final release:** Put post in the `Releases` category."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:126
msgid "  - It should never be placed in the `News` category."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:127
msgid "- Post to [nvda-devel list](https://groups.io/g/nvda-devel/post)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:128
msgid ""
"- Post to [nvda-translations list](https://groups.io/g/nvda-translations/"
"post)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:129
msgid "- Post to Twitter"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:130
msgid "- Post on Facebook."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:131
msgid "- Post to the NV Access News email list."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:132
msgid "## Update auto milestone ID"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:133
msgid ""
"This ensures correct milestone is set on issues and pull requests now closed "
"by GitHub automatically."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:134
msgid "1. Get the milestone id for the new release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:135
msgid "  - Go to https://github.com/nvaccess/nvda/milestones"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:136
msgid "  - Look at the link URL for the relevant milestone."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:137
msgid "  - The number at the end is the `id`."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:138
msgid "1. Log into exbi"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:139
msgid "1. Swap to nvaccess user: `sudo su nvaccess`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:140
msgid "1. Edit `~nvaccess/data/nvaServer.conf`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:141
msgid ""
"1. In the `[nvdaGithub]` section, change the value of `autoCloseMilestone` "
"to the milestone `id` obtained in step 1."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:142
msgid "1. Save the file and `exit` to return to your user."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:143
msgid ""
"1. Reload `uwsgi` so the change takes effect: `sudo systemctl reload uwsgi`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:144
msgid "## Update NVDA version in `master`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:145
msgid ""
"In NVDA source, ensure the `master` branch version number and changes file "
"are correct"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:146
msgid ""
"1. In `source/buildVersion.py`, update the `version_year` and/or "
"`version_major` variables for the next version."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:147
msgid ""
"   - If the next version is the first version for that year (e.g. 2018.1), "
"also update `copyrightYears`."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:148
msgid ""
"2. Add a heading for the next version in `user_docs/en/changes.t2t` if it is "
"not there already."
msgstr ""
